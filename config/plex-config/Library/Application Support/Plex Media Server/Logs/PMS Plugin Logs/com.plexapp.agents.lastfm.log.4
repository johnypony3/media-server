2017-05-31 06:41:19,877 (7fcffa7fc700) :  DEBUG (runtime:717) - Handling request GET /:/plugins/com.plexapp.agents.lastfm/messaging/function/TWVzc2FnZUtpdDpBcnRpc3RNYmlkTG9va3Vw/Y2VyZWFsMQoxCmxpc3QKMApyMAo_/Y2VyZWFsMQo2MgpkaWN0CmRpY3QKZGljdApkaWN0CmRpY3QKZGljdApkaWN0Cmxpc3QKZGljdApkaWN0CmRpY3QKZGljdApkaWN0Cmxpc3QKZGljdApkaWN0CmRpY3QKZGljdApkaWN0CmRpY3QKZGljdApsaXN0CmRpY3QKbGlzdApkaWN0CmRpY3QKZGljdApkaWN0CmRpY3QKZGljdApkaWN0Cmxpc3QKZGljdApkaWN0CmRpY3QKZGljdApkaWN0CmRpY3QKZGljdApsaXN0CmRpY3QKZGljdApkaWN0CmRpY3QKZGljdApkaWN0CmRpY3QKbGlzdApkaWN0CmRpY3QKZGljdApkaWN0CmRpY3QKZGljdApkaWN0Cmxpc3QKZGljdApkaWN0CmRpY3QKZGljdApkaWN0CmRpY3QKMQpyMQpzMTMKbGFzdGZtX2FydGlzdDEwCnIyCnMzCmJpb3MxCjBzMTAKc3RyZWFtYWJsZXMxCjBzNgpvbnRvdXJyNQpzNQpzdGF0c3M4Ckx1ZGFjcmlzczQKbmFtZXI2CnM0CnRhZ3NzMzQKaHR0cHM6Ly93d3cubGFzdC5mbS9tdXNpYy9MdWRhY3Jpc3MzCnVybHIxMwpzNQppbWFnZXMzNgowNjM4YmEyMi0wNDBmLTQzOGQtODNhNS05YjY3MGM0YWRhZjVzNAptYmlkcjIwCnM3CnNpbWlsYXI0CnUxNTUyOQpDaHJpc3RvcGhlciBCcmlhbiBCcmlkZ2VzIChib3JuIFNlcHRlbWJlciAxMSwgMTk3NyBpbiBDaGFtcGFpZ24sIElsbGlub2lzKSwgYmV0dGVyIGtub3duIGJ5IGhpcyBzdGFnZSBuYW1lIEx1ZGFjcmlzLCBpcyBhIEdyYW1teSBhd2FyZCB3aW5uaW5nIEFtZXJpY2FuIHJhcHBlciwgU0FHIGF3YXJkIHdpbm5pbmcgYWN0b3IgYW5kIGNvLWZvdW5kZXIgb2YgdGhlIGxhYmVsIERpc3R1cmJpbmcgVGhhIFBlYWNlLiBIZSBpcyB0aGUgaGlnaGVzdCBzZWxsaW5nIFNvdXRoZXJuIGhpcCBob3Agc29sbyBhcnRpc3Qgb2YgYWxsIHRpbWUgd2l0aCBvdmVyIDE1IG1pbGxpb24gdW5pdHMgc29sZCBpbiB0aGUgVW5pdGVkIFN0YXRlcyBhbmQgYXJvdW5kIDIwIG1pbGxpb24gcmVjb3JkcyBzb2xkIHdvcmxkd2lkZS4gSGUgcmVsZWFzZWQgaGlzIGRlYnV0IGFsYnVtIEluY29nbmVncm8gaW4gMTk5OSBhbmQgaGFzIHNpbmNlIHJlbGVhc2VkIGEgZnVydGhlciBzZXZlbiBhbGJ1bXMuIEhpcyBuaW50aCBzdHVkaW8gYWxidW0sIEx1ZGF2ZXJzYWwsIHdpbGwgYmUgcmVsZWFzZWQgc29tZXRpbWUgaW4gMjAxMi4KCkVhcmx5IHllYXJzCgpCcmlkZ2VzIGJlZ2FuIGhpcyBtdXNpYyBjYXJlZXIgYXMgYSByYWRpbyBwZXJzb25hbGl0eSBhbmQgREogYXMgQ2hyaXMgTG92YSBMb3ZhIG9uIEhvdCA5NywgYW4gdXJiYW4gcmFkaW8gc3RhdGlvbiBpbiBBdGxhbnRhLCBHZW9yZ2lhLiBIZSBtYWRlIGhpcyByZWNvcmRlZCBkZWJ1dCBvbiAiUGhhdCBSYWJiaXQsIiBhIHRyYWNrIGZyb20gVGltYmFsYW5kJ3MgMTk5OCBhbGJ1bSBUaW0ncyBCaW86IExpZmUgZnJvbSB0aGUgQmFzZW1lbnQuIEFsdGhvdWdoIGJvdGggVGltYmFsYW5kIGFuZCBKZXJtYWluZSBEdXByaSBzaG93ZWQgaW50ZXJlc3QgaW4gc2lnbmluZyBMdWRhY3JpcywgaGUgZGVjaWRlZCB0byByZWxlYXNlIHRoZSBhbGJ1bSAiSW5jb2duZWdybyIgaW5kZXBlbmRlbnRseSBpbiAxOTk5LiBUaGUgYWxidW0gc29sZCBvdmVyIDUwLDAwMCBjb3BpZXMgdGhyb3VnaCB0aGUgQXRsYW50YSBiYXNlZCBpbmRlcGVuZGVudCBtdXNpYyBkaXN0cmlidXRvciwgU291dGhlcm4gTXVzaWMgRGlzdHJpYnV0aW9uLiBUaGUgc2FtZSB5ZWFyLCBoZSByZWNvcmRlZCB0aGUgdGhlbWUgdG8gdGhlIHZpZGVvIGdhbWUgTWFkZGVuIE5GTCAyMDAwLiBTY2FyZmFjZSwgYW4gb3JpZ2luYWwgbWVtYmVyIG9mIHRoZSBHZXRvIEJveXMsIHNpZ25lZCBMdWRhY3JpcyBpbiAyMDAwIHRvIERlZiBKYW0gUmVjb3JkaW5ncywgYW5kIGNyZWF0ZWQgYSBuZXcgaW1wcmludCwgRGVmIEphbSBTb3V0aCwgYXJvdW5kIGhpbS4KCkJhY2sgZm9yIHRoZSBGaXJzdCBUaW1lCgpMdWRhY3JpcyByZWxlYXNlZCBoaXMgbWFqb3IgbGFiZWwgZGVidXQsIEJhY2sgZm9yIHRoZSBGaXJzdCBUaW1lLCBpbiBPY3RvYmVyIDIwMDAuIFRoZSBhbGJ1bSByZWFjaGVkIGFzIGhpZ2ggYXMgIzQgb24gdGhlIGNoYXJ0cywgYW5kIHdhcyBhIG1ham9yIHN1Y2Nlc3MuIEx1ZGFjcmlzIG1hZGUgaGlzIG1hcmsgb24gdGhlIGluZHVzdHJ5IHdpdGggc2luZ2xlcyBzdWNoIGFzICJTb3V0aGVybiBIb3NwaXRhbGl0eSIgYW5kICJXaGF0J3MgWW91ciBGYW50YXN5IiwgYWxvbmcgd2l0aCBoaXMgZmlyc3QgZXZlciBzaW5nbGUgIlBoYXQgUmFiYml0IiwgZnJvbSAyIHllYXJzIHByaW9yLiBCYWNrIGZvciB0aGUgRmlyc3QgVGltZSB3YXMgdGhlIGJlZ2lubmluZyBvZiBMdWRhY3JpcydzIGV4cGxvc2lvbiB0byB0aGUgdG9wIG9mIHRoZSByYXAgd29ybGQuCgpXb3JkIG9mIE1vdWYKCkx1ZGFjcmlzIHByb21wdGx5IGNvbXBsZXRlZCBoaXMgbmV4dCBhbGJ1bSwgV29yZCBPZiBNb3VmIGFuZCByZWxlYXNlZCBpdCBhdCB0aGUgZW5kIG9mIDIwMDEuIEl0cyBsZWFkIHNpbmdsZSwgIlJvbGxvdXQgKE15IEJ1c2luZXNzKSIgd2FzIGJveWNvdHRlZCBpbiBtYW55IEFtZXJpY2FuIHZpZGVvIHN0YXRpb25zLiBEZXNwaXRlIHRoZSBjb250cm92ZXJzeSwgdGhlIHZpZGVvIHdhcyBub21pbmF0ZWQgZm9yIGEgMjAwMyBWTUEsIGFuZCBMdWRhIHBlcmZvcm1lZCBpdCBsaXZlIGF0IHRoZSBhd2FyZHMnIHByZS1zaG93LiBMdWRhY3JpcyBhbHNvIHRvdXJlZCB3aXRoIFBhcGEgUm9hY2ggaW4gMjAwMiBhZnRlciB0aGUgcmVsZWFzZSBvZiB0aGVpciBzb3Bob21vcmUgYWxidW0gbG92ZWhhdGV0cmFnZWR5LiBMdWRhY3JpcyByZWFjaGVkIGEgbmV3IGxldmVsIG9mIG5vdG9yaWV0eSB3aGVuIFRWJ3MgQmlsbCBPJ1JlaWxseSBleHByZXNzZWQgb3V0cmFnZSB0aGF0IFBlcHNpIGhhZCBoaXJlZCBMdWRhY3JpcyBhcyBhIHNwb2tlc21hbi4gTydSZWlsbHkgcmVwZWF0ZWRseSBhdHRhY2tlZCBMdWRhY3JpcydzIGZvdWwgbGFuZ3VhZ2UgYW5kIGNhbGxlZCBmb3IgYSBuYXRpb24td2lkZSBib3ljb3R0IG9mIFBlcHNpLCB3aG8gdGhlbiBmaXJlZCBMdWRhY3JpcyBhbmQgaGlyZWQgT3p6eSBPc2JvdXJuZSdzIGZhbWlseSBpbnN0ZWFkLgoKQ2hpY2tlbi1OLUJlZXIKCkR1cmluZyB0aGUgc3ByaW5nIG9mIDIwMDMsIEx1ZGFjcmlzIHJldHVybmVkIHRvIHRoZSBtdXNpYyBzY2VuZSBhZnRlciBhIGJyaWVmIGhpYXR1cyB3aXRoIGEgbmV3IHNpbmdsZSwgIkFjdCBBIEZvb2wiIGZyb20gdGhlIDIgRmFzdCAyIEZ1cmlvdXMgc291bmR0cmFjay4gQXQgYXJvdW5kIHRoZSBzYW1lIHRpbWUsIGhlIHJlbGVhc2VkIHRoZSBsZWFkIHNpbmdsZSBmcm9tIGhpcyB1cGNvbWluZyBhbGJ1bSwgQ2hpY2tlbiAmIEJlZXIsIGNhbGxlZCAiUC1Qb3BwaW4iIChzaG9ydCBmb3IgIlB1c3N5IFBvcHBpbiciKS4gTmVpdGhlciBvZiBoaXMgbmV3IHNpbmdsZXMgd2VyZSBhcyB3ZWxsLXJlY2VpdmVkIGJ5IGVpdGhlciB0aGUgdXJiYW4gb3IgcG9wIGF1ZGllbmNlcyBhcyBoaXMgcHJldmlvdXMgc29uZ3MgaGFkIGJlZW4sIGFuZCBib3RoIG11c2ljIHZpZGVvcyByZWNlaXZlZCBvbmx5IGxpbWl0ZWQgYWlycGxheS4gQ2hpY2tlbiAmIEJlZXIgb3BlbmVkIHN0cm9uZ2x5LCBidXQgd2l0aG91dCBhIHBvcHVsYXIgc2luZ2xlLCB0aGUgYWxidW0gZmVsbCBxdWlja2x5LgoKSG93ZXZlciwgaW4gdGhlIGZhbGwgb2YgMjAwMywgTHVkYWNyaXMgcmVib3VuZGVkIHdpdGggaGlzIG5leHQgc2luZ2xlLCAiU3RhbmQgVXAiLCB3aGljaCBhcHBlYXJlZCBvbiBib3RoIENoaWNrZW4gJiBCZWVyIGFzIHdlbGwgYXMgdGhlIHNvdW5kdHJhY2sgZm9yIHRoZSB0ZWVuIGhpcC1ob3AvZGFuY2UgbW92aWUsIEhvbmV5LiBQcm9kdWNlZCBieSBLYW55ZSBXZXN0LCAiU3RhbmQgVXAiIHdlbnQgb24gdG8gYmVjb21lIEx1ZGFjcmlzJyBiaWdnZXN0IG1haW5zdHJlYW0gaGl0IHRvIGRhdGUsIGhpdHRpbmcgdGhlIHRvcCBzcG90IG9uIHRoZSBCaWxsYm9hcmQgSG90IDEwMCBhbmQgZ2FybmVyaW5nIGhlYXZ5IGFpcnBsYXkgb24gbWFpbnN0cmVhbSBwb3AsIHJoeXRobWljLCBhbmQgdXJiYW4gcmFkaW8gc3RhdGlvbnMsIGFzIHdlbGwgYXMgb24gTVRWLCBNVFYyLCBhbmQgQkVULgoKVGhlIGFsYnVtJ3MgbmV4dCBzaW5nbGUsICJTcGxhc2ggV2F0ZXJmYWxscyIsIHdhcyByZWxlYXNlZCBpbiBlYXJseSAyMDA0LiBUaG91Z2ggbm90IGEgcG9wIGhpdCwgaXQgYmVjYW1lIGEgc3VjY2VzcyBhdCB1cmJhbiByYWRpbyBhbmQgQkVULiBJdCB3YXMgTHVkYWNyaXMnIG1vc3Qgc2V4dWFsIHZpZGVvIHlldCBhbmQgYW4gUiZCIHJlbWl4IHRoYXQgZmVhdHVyZWQgUmFwaGFlbCBTYWFkaXEgYW5kIHNhbXBsZWQgVG9ueSEgVG9uaSEgVG9uZSEncyAiV2hhdGV2ZXIgWW91IFdhbnQiLiBMdWRhIG5leHQgcmVsZWFzZWQgIkJsb3cgSXQgT3V0IiwgYSBncml0dHkgc29uZyB0aGF0IGhhZCBhIGhlYXZpbHkgbG93LWJ1ZGdldCwgZ3JpdHR5LCBhbmQgdXJiYW4tbG9va2luZyBtdXNpYyB2aWRlbywgd2hpY2ggd2FzIGEgaHVnZSBkZXBhcnR1cmUgZnJvbSB0aGUgY29sb3JmdWwsIHNlbnN1YWwsIFImQiBsZWFuaW5ncyBkZXBpY3RlZCBpbiAiU3BsYXNoIFdhdGVyZmFsbHMiLiAiQmxvdyBJdCBPdXQiIGFjdGVkIGJvdGggYXMgYSBzY2F0aGluZyByZXNwb25zZSB0byB0aGUgYWZvcmVtZW50aW9uZWQgY3JpdGljaXNtIGxldmllZCBieSBCaWxsIE8nUmVpbGx5IGFuZCBhbiBleHByZXNzaW9uIG9mIGRpc2d1c3QgYXQgUGVwc2kncyBjb3dhcmRpY2UgaW4gdGhlIGFmZmFpcjoKCiAgICBTaG91dCBvdXQgdG8gQmlsbCBPJ1JlaWxseSwgSSdtJ2EgdGhyb3cgeW91IGEgY3VydmUKICAgIFlvdSBtYWQgY2F1c2UgSSdtIGEgdGhpZWYgYW5kIGdvdCBhd2F5IHdpdGggd29yZHMKICAgIEknbSdhIHN0YXJ0IG15IG93biBiZXZlcmFnZSwgaXQnbGwgY2FsbSB5b3VyIG5lcnZlcwogICAgUGVwc2kncyB0aGUgTmV3IEdlbmVyYXRpb24%
2017-05-31 06:41:19,925 (7fcffa7fc700) :  DEBUG (runtime:49) - Received packed state data (556 bytes)
2017-05-31 06:41:19,989 (7fcffa7fc700) :  DEBUG (runtime:814) - Found route matching /:/plugins/com.plexapp.agents.lastfm/messaging/function/TWVzc2FnZUtpdDpBcnRpc3RNYmlkTG9va3Vw/Y2VyZWFsMQoxCmxpc3QKMApyMAo_/Y2VyZWFsMQo2MgpkaWN0CmRpY3QKZGljdApkaWN0CmRpY3QKZGljdApkaWN0Cmxpc3QKZGljdApkaWN0CmRpY3QKZGljdApkaWN0Cmxpc3QKZGljdApkaWN0CmRpY3QKZGljdApkaWN0CmRpY3QKZGljdApsaXN0CmRpY3QKbGlzdApkaWN0CmRpY3QKZGljdApkaWN0CmRpY3QKZGljdApkaWN0Cmxpc3QKZGljdApkaWN0CmRpY3QKZGljdApkaWN0CmRpY3QKZGljdApsaXN0CmRpY3QKZGljdApkaWN0CmRpY3QKZGljdApkaWN0CmRpY3QKbGlzdApkaWN0CmRpY3QKZGljdApkaWN0CmRpY3QKZGljdApkaWN0Cmxpc3QKZGljdApkaWN0CmRpY3QKZGljdApkaWN0CmRpY3QKMQpyMQpzMTMKbGFzdGZtX2FydGlzdDEwCnIyCnMzCmJpb3MxCjBzMTAKc3RyZWFtYWJsZXMxCjBzNgpvbnRvdXJyNQpzNQpzdGF0c3M4Ckx1ZGFjcmlzczQKbmFtZXI2CnM0CnRhZ3NzMzQKaHR0cHM6Ly93d3cubGFzdC5mbS9tdXNpYy9MdWRhY3Jpc3MzCnVybHIxMwpzNQppbWFnZXMzNgowNjM4YmEyMi0wNDBmLTQzOGQtODNhNS05YjY3MGM0YWRhZjVzNAptYmlkcjIwCnM3CnNpbWlsYXI0CnUxNTUyOQpDaHJpc3RvcGhlciBCcmlhbiBCcmlkZ2VzIChib3JuIFNlcHRlbWJlciAxMSwgMTk3NyBpbiBDaGFtcGFpZ24sIElsbGlub2lzKSwgYmV0dGVyIGtub3duIGJ5IGhpcyBzdGFnZSBuYW1lIEx1ZGFjcmlzLCBpcyBhIEdyYW1teSBhd2FyZCB3aW5uaW5nIEFtZXJpY2FuIHJhcHBlciwgU0FHIGF3YXJkIHdpbm5pbmcgYWN0b3IgYW5kIGNvLWZvdW5kZXIgb2YgdGhlIGxhYmVsIERpc3R1cmJpbmcgVGhhIFBlYWNlLiBIZSBpcyB0aGUgaGlnaGVzdCBzZWxsaW5nIFNvdXRoZXJuIGhpcCBob3Agc29sbyBhcnRpc3Qgb2YgYWxsIHRpbWUgd2l0aCBvdmVyIDE1IG1pbGxpb24gdW5pdHMgc29sZCBpbiB0aGUgVW5pdGVkIFN0YXRlcyBhbmQgYXJvdW5kIDIwIG1pbGxpb24gcmVjb3JkcyBzb2xkIHdvcmxkd2lkZS4gSGUgcmVsZWFzZWQgaGlzIGRlYnV0IGFsYnVtIEluY29nbmVncm8gaW4gMTk5OSBhbmQgaGFzIHNpbmNlIHJlbGVhc2VkIGEgZnVydGhlciBzZXZlbiBhbGJ1bXMuIEhpcyBuaW50aCBzdHVkaW8gYWxidW0sIEx1ZGF2ZXJzYWwsIHdpbGwgYmUgcmVsZWFzZWQgc29tZXRpbWUgaW4gMjAxMi4KCkVhcmx5IHllYXJzCgpCcmlkZ2VzIGJlZ2FuIGhpcyBtdXNpYyBjYXJlZXIgYXMgYSByYWRpbyBwZXJzb25hbGl0eSBhbmQgREogYXMgQ2hyaXMgTG92YSBMb3ZhIG9uIEhvdCA5NywgYW4gdXJiYW4gcmFkaW8gc3RhdGlvbiBpbiBBdGxhbnRhLCBHZW9yZ2lhLiBIZSBtYWRlIGhpcyByZWNvcmRlZCBkZWJ1dCBvbiAiUGhhdCBSYWJiaXQsIiBhIHRyYWNrIGZyb20gVGltYmFsYW5kJ3MgMTk5OCBhbGJ1bSBUaW0ncyBCaW86IExpZmUgZnJvbSB0aGUgQmFzZW1lbnQuIEFsdGhvdWdoIGJvdGggVGltYmFsYW5kIGFuZCBKZXJtYWluZSBEdXByaSBzaG93ZWQgaW50ZXJlc3QgaW4gc2lnbmluZyBMdWRhY3JpcywgaGUgZGVjaWRlZCB0byByZWxlYXNlIHRoZSBhbGJ1bSAiSW5jb2duZWdybyIgaW5kZXBlbmRlbnRseSBpbiAxOTk5LiBUaGUgYWxidW0gc29sZCBvdmVyIDUwLDAwMCBjb3BpZXMgdGhyb3VnaCB0aGUgQXRsYW50YSBiYXNlZCBpbmRlcGVuZGVudCBtdXNpYyBkaXN0cmlidXRvciwgU291dGhlcm4gTXVzaWMgRGlzdHJpYnV0aW9uLiBUaGUgc2FtZSB5ZWFyLCBoZSByZWNvcmRlZCB0aGUgdGhlbWUgdG8gdGhlIHZpZGVvIGdhbWUgTWFkZGVuIE5GTCAyMDAwLiBTY2FyZmFjZSwgYW4gb3JpZ2luYWwgbWVtYmVyIG9mIHRoZSBHZXRvIEJveXMsIHNpZ25lZCBMdWRhY3JpcyBpbiAyMDAwIHRvIERlZiBKYW0gUmVjb3JkaW5ncywgYW5kIGNyZWF0ZWQgYSBuZXcgaW1wcmludCwgRGVmIEphbSBTb3V0aCwgYXJvdW5kIGhpbS4KCkJhY2sgZm9yIHRoZSBGaXJzdCBUaW1lCgpMdWRhY3JpcyByZWxlYXNlZCBoaXMgbWFqb3IgbGFiZWwgZGVidXQsIEJhY2sgZm9yIHRoZSBGaXJzdCBUaW1lLCBpbiBPY3RvYmVyIDIwMDAuIFRoZSBhbGJ1bSByZWFjaGVkIGFzIGhpZ2ggYXMgIzQgb24gdGhlIGNoYXJ0cywgYW5kIHdhcyBhIG1ham9yIHN1Y2Nlc3MuIEx1ZGFjcmlzIG1hZGUgaGlzIG1hcmsgb24gdGhlIGluZHVzdHJ5IHdpdGggc2luZ2xlcyBzdWNoIGFzICJTb3V0aGVybiBIb3NwaXRhbGl0eSIgYW5kICJXaGF0J3MgWW91ciBGYW50YXN5IiwgYWxvbmcgd2l0aCBoaXMgZmlyc3QgZXZlciBzaW5nbGUgIlBoYXQgUmFiYml0IiwgZnJvbSAyIHllYXJzIHByaW9yLiBCYWNrIGZvciB0aGUgRmlyc3QgVGltZSB3YXMgdGhlIGJlZ2lubmluZyBvZiBMdWRhY3JpcydzIGV4cGxvc2lvbiB0byB0aGUgdG9wIG9mIHRoZSByYXAgd29ybGQuCgpXb3JkIG9mIE1vdWYKCkx1ZGFjcmlzIHByb21wdGx5IGNvbXBsZXRlZCBoaXMgbmV4dCBhbGJ1bSwgV29yZCBPZiBNb3VmIGFuZCByZWxlYXNlZCBpdCBhdCB0aGUgZW5kIG9mIDIwMDEuIEl0cyBsZWFkIHNpbmdsZSwgIlJvbGxvdXQgKE15IEJ1c2luZXNzKSIgd2FzIGJveWNvdHRlZCBpbiBtYW55IEFtZXJpY2FuIHZpZGVvIHN0YXRpb25zLiBEZXNwaXRlIHRoZSBjb250cm92ZXJzeSwgdGhlIHZpZGVvIHdhcyBub21pbmF0ZWQgZm9yIGEgMjAwMyBWTUEsIGFuZCBMdWRhIHBlcmZvcm1lZCBpdCBsaXZlIGF0IHRoZSBhd2FyZHMnIHByZS1zaG93LiBMdWRhY3JpcyBhbHNvIHRvdXJlZCB3aXRoIFBhcGEgUm9hY2ggaW4gMjAwMiBhZnRlciB0aGUgcmVsZWFzZSBvZiB0aGVpciBzb3Bob21vcmUgYWxidW0gbG92ZWhhdGV0cmFnZWR5LiBMdWRhY3JpcyByZWFjaGVkIGEgbmV3IGxldmVsIG9mIG5vdG9yaWV0eSB3aGVuIFRWJ3MgQmlsbCBPJ1JlaWxseSBleHByZXNzZWQgb3V0cmFnZSB0aGF0IFBlcHNpIGhhZCBoaXJlZCBMdWRhY3JpcyBhcyBhIHNwb2tlc21hbi4gTydSZWlsbHkgcmVwZWF0ZWRseSBhdHRhY2tlZCBMdWRhY3JpcydzIGZvdWwgbGFuZ3VhZ2UgYW5kIGNhbGxlZCBmb3IgYSBuYXRpb24td2lkZSBib3ljb3R0IG9mIFBlcHNpLCB3aG8gdGhlbiBmaXJlZCBMdWRhY3JpcyBhbmQgaGlyZWQgT3p6eSBPc2JvdXJuZSdzIGZhbWlseSBpbnN0ZWFkLgoKQ2hpY2tlbi1OLUJlZXIKCkR1cmluZyB0aGUgc3ByaW5nIG9mIDIwMDMsIEx1ZGFjcmlzIHJldHVybmVkIHRvIHRoZSBtdXNpYyBzY2VuZSBhZnRlciBhIGJyaWVmIGhpYXR1cyB3aXRoIGEgbmV3IHNpbmdsZSwgIkFjdCBBIEZvb2wiIGZyb20gdGhlIDIgRmFzdCAyIEZ1cmlvdXMgc291bmR0cmFjay4gQXQgYXJvdW5kIHRoZSBzYW1lIHRpbWUsIGhlIHJlbGVhc2VkIHRoZSBsZWFkIHNpbmdsZSBmcm9tIGhpcyB1cGNvbWluZyBhbGJ1bSwgQ2hpY2tlbiAmIEJlZXIsIGNhbGxlZCAiUC1Qb3BwaW4iIChzaG9ydCBmb3IgIlB1c3N5IFBvcHBpbiciKS4gTmVpdGhlciBvZiBoaXMgbmV3IHNpbmdsZXMgd2VyZSBhcyB3ZWxsLXJlY2VpdmVkIGJ5IGVpdGhlciB0aGUgdXJiYW4gb3IgcG9wIGF1ZGllbmNlcyBhcyBoaXMgcHJldmlvdXMgc29uZ3MgaGFkIGJlZW4sIGFuZCBib3RoIG11c2ljIHZpZGVvcyByZWNlaXZlZCBvbmx5IGxpbWl0ZWQgYWlycGxheS4gQ2hpY2tlbiAmIEJlZXIgb3BlbmVkIHN0cm9uZ2x5LCBidXQgd2l0aG91dCBhIHBvcHVsYXIgc2luZ2xlLCB0aGUgYWxidW0gZmVsbCBxdWlja2x5LgoKSG93ZXZlciwgaW4gdGhlIGZhbGwgb2YgMjAwMywgTHVkYWNyaXMgcmVib3VuZGVkIHdpdGggaGlzIG5leHQgc2luZ2xlLCAiU3RhbmQgVXAiLCB3aGljaCBhcHBlYXJlZCBvbiBib3RoIENoaWNrZW4gJiBCZWVyIGFzIHdlbGwgYXMgdGhlIHNvdW5kdHJhY2sgZm9yIHRoZSB0ZWVuIGhpcC1ob3AvZGFuY2UgbW92aWUsIEhvbmV5LiBQcm9kdWNlZCBieSBLYW55ZSBXZXN0LCAiU3RhbmQgVXAiIHdlbnQgb24gdG8gYmVjb21lIEx1ZGFjcmlzJyBiaWdnZXN0IG1haW5zdHJlYW0gaGl0IHRvIGRhdGUsIGhpdHRpbmcgdGhlIHRvcCBzcG90IG9uIHRoZSBCaWxsYm9hcmQgSG90IDEwMCBhbmQgZ2FybmVyaW5nIGhlYXZ5IGFpcnBsYXkgb24gbWFpbnN0cmVhbSBwb3AsIHJoeXRobWljLCBhbmQgdXJiYW4gcmFkaW8gc3RhdGlvbnMsIGFzIHdlbGwgYXMgb24gTVRWLCBNVFYyLCBhbmQgQkVULgoKVGhlIGFsYnVtJ3MgbmV4dCBzaW5nbGUsICJTcGxhc2ggV2F0ZXJmYWxscyIsIHdhcyByZWxlYXNlZCBpbiBlYXJseSAyMDA0LiBUaG91Z2ggbm90IGEgcG9wIGhpdCwgaXQgYmVjYW1lIGEgc3VjY2VzcyBhdCB1cmJhbiByYWRpbyBhbmQgQkVULiBJdCB3YXMgTHVkYWNyaXMnIG1vc3Qgc2V4dWFsIHZpZGVvIHlldCBhbmQgYW4gUiZCIHJlbWl4IHRoYXQgZmVhdHVyZWQgUmFwaGFlbCBTYWFkaXEgYW5kIHNhbXBsZWQgVG9ueSEgVG9uaSEgVG9uZSEncyAiV2hhdGV2ZXIgWW91IFdhbnQiLiBMdWRhIG5leHQgcmVsZWFzZWQgIkJsb3cgSXQgT3V0IiwgYSBncml0dHkgc29uZyB0aGF0IGhhZCBhIGhlYXZpbHkgbG93LWJ1ZGdldCwgZ3JpdHR5LCBhbmQgdXJiYW4tbG9va2luZyBtdXNpYyB2aWRlbywgd2hpY2ggd2FzIGEgaHVnZSBkZXBhcnR1cmUgZnJvbSB0aGUgY29sb3JmdWwsIHNlbnN1YWwsIFImQiBsZWFuaW5ncyBkZXBpY3RlZCBpbiAiU3BsYXNoIFdhdGVyZmFsbHMiLiAiQmxvdyBJdCBPdXQiIGFjdGVkIGJvdGggYXMgYSBzY2F0aGluZyByZXNwb25zZSB0byB0aGUgYWZvcmVtZW50aW9uZWQgY3JpdGljaXNtIGxldmllZCBieSBCaWxsIE8nUmVpbGx5IGFuZCBhbiBleHByZXNzaW9uIG9mIGRpc2d1c3QgYXQgUGVwc2kncyBjb3dhcmRpY2UgaW4gdGhlIGFmZmFpcjoKCiAgICBTaG91dCBvdXQgdG8gQmlsbCBPJ1JlaWxseSwgSSdtJ2EgdGhyb3cgeW91IGEgY3VydmUKICAgIFlvdSBtYWQgY2F1c2UgSSdtIGEgdGhpZWYgYW5kIGdvdCBhd2F5IHdpdGggd29yZHMKICAgIEknbSdhIHN0YXJ0IG15IG93biBiZXZlcmFnZSwgaXQnbGwgY2FsbSB5b3VyIG5lcnZlcwogICAgUGVwc2kncyB0aGUgTmV3IEdlbmVyYXRpb24@
2017-05-31 06:41:20,011 (7fcff9e3b700) :  DEBUG (networking:161) - Fetching 'http://lastfm-z.plexapp.com/2.0/?method=artist.search&artist=dr.%20dre&page=1&limit=9&format=json&api_key=d5310352469c2631e5976d0f4a599773' from the HTTP cache
2017-05-31 06:41:20,097 (7fcffa7fc700) :  DEBUG (networking:166) - Requesting 'https://musicbrainz.plex.tv/ws/2/artist/0638ba22-040f-438d-83a5-9b670c4adaf5'
2017-05-31 06:41:20,113 (7fcff9e3b700) :  INFO (__init__:201) - Fetching artist's albums and applying album bonus.
2017-05-31 06:41:20,159 (7fcff9e3b700) :  DEBUG (networking:161) - Fetching 'http://lastfm-z.plexapp.com/2.0/?method=artist.gettopalbums&artist=dr.%20dre&page=1&limit=50&format=json&api_key=d5310352469c2631e5976d0f4a599773' from the HTTP cache
2017-05-31 06:41:20,438 (7fcff9e3b700) :  INFO (__init__:225) - Applying album bonus of: 1
2017-05-31 06:41:20,443 (7fcff9e3b700) :  INFO (__init__:187) - Artist result: Dr. Dre dist: -1 album bonus: 1 listeners: 2213081 score: 92
2017-05-31 06:41:20,451 (7fcff9e3b700) :  INFO (__init__:201) - Fetching artist's albums and applying album bonus.
2017-05-31 06:41:20,467 (7fcffa7fc700) :  DEBUG (networking:198) - Not caching 'https://musicbrainz.plex.tv/ws/2/artist/0638ba22-040f-438d-83a5-9b670c4adaf5' (content type 'application/octet-stream' not cacheable in Agent plug-ins)
2017-05-31 06:41:20,505 (7fcff9e3b700) :  DEBUG (networking:161) - Fetching 'http://lastfm-z.plexapp.com/2.0/?method=artist.gettopalbums&artist=dr%20dre%20%26%20snoop%20doggy%20dog&page=1&limit=50&format=json&api_key=d5310352469c2631e5976d0f4a599773' from the HTTP cache
2017-05-31 06:41:20,531 (7fcffa7fc700) :  DEBUG (networking:166) - Requesting 'https://musicbrainz.plex.tv/ws/2/artist/0638ba22-040f-438d-83a5-9b670c4adaf5'
2017-05-31 06:41:20,689 (7fcffa7fc700) :  DEBUG (networking:198) - Not caching 'https://musicbrainz.plex.tv/ws/2/artist/0638ba22-040f-438d-83a5-9b670c4adaf5' (content type 'application/octet-stream' not cacheable in Agent plug-ins)
2017-05-31 06:41:20,694 (7fcffa7fc700) :  INFO (__init__:77) - Found MBID: 0638ba22-040f-438d-83a5-9b670c4adaf5
2017-05-31 06:41:20,712 (7fcffa7fc700) :  DEBUG (runtime:88) - Sending packed state data (582 bytes)
2017-05-31 06:41:20,734 (7fcffa7fc700) :  DEBUG (runtime:924) - Response: [200] str, 68 bytes
2017-05-31 06:41:20,840 (7fcff9e3b700) :  INFO (__init__:187) - Artist result: Dr Dre & Snoop Doggy Dog dist: 33 album bonus: 0 listeners: 29844 score: 57
2017-05-31 06:41:20,843 (7fcff9e3b700) :  INFO (__init__:193) - Skipping artist, didn't meet minimum score of 75
2017-05-31 06:41:20,847 (7fcff9e3b700) :  INFO (__init__:201) - Fetching artist's albums and applying album bonus.
2017-05-31 06:41:20,896 (7fcff9e3b700) :  DEBUG (networking:161) - Fetching 'http://lastfm-z.plexapp.com/2.0/?method=artist.gettopalbums&artist=dr.%20dre%20%26%20snoop%20doggy%20dogg&page=1&limit=50&format=json&api_key=d5310352469c2631e5976d0f4a599773' from the HTTP cache
2017-05-31 06:41:21,176 (7fcff9e3b700) :  INFO (__init__:187) - Artist result: Dr. Dre & Snoop Doggy Dogg dist: 32 album bonus: 0 listeners: 22314 score: 58
2017-05-31 06:41:21,179 (7fcff9e3b700) :  INFO (__init__:193) - Skipping artist, didn't meet minimum score of 75
2017-05-31 06:41:21,184 (7fcff9e3b700) :  INFO (__init__:201) - Fetching artist's albums and applying album bonus.
2017-05-31 06:41:21,277 (7fcff9e3b700) :  DEBUG (networking:161) - Fetching 'http://lastfm-z.plexapp.com/2.0/?method=artist.gettopalbums&artist=dr.%20dre%20feat.%20eminem%20%26%20skylar%20grey&page=1&limit=50&format=json&api_key=d5310352469c2631e5976d0f4a599773' from the HTTP cache
2017-05-31 06:41:21,580 (7fcff9e3b700) :  INFO (__init__:187) - Artist result: Dr. Dre feat. Eminem & Skylar Grey dist: 32 album bonus: 0 listeners: 10495 score: 58
2017-05-31 06:41:21,584 (7fcff9e3b700) :  INFO (__init__:193) - Skipping artist, didn't meet minimum score of 75
2017-05-31 06:41:21,590 (7fcff9e3b700) :  INFO (__init__:201) - Fetching artist's albums and applying album bonus.
2017-05-31 06:41:21,662 (7fcff9e3b700) :  DEBUG (networking:161) - Fetching 'http://lastfm-z.plexapp.com/2.0/?method=artist.gettopalbums&artist=dr%20dre%20feat%20snoop%20dog&page=1&limit=50&format=json&api_key=d5310352469c2631e5976d0f4a599773' from the HTTP cache
2017-05-31 06:41:21,956 (7fcff9e3b700) :  INFO (__init__:187) - Artist result: Dr Dre feat Snoop Dog dist: 28 album bonus: 0 listeners: 9199 score: 62
2017-05-31 06:41:21,960 (7fcff9e3b700) :  INFO (__init__:193) - Skipping artist, didn't meet minimum score of 75
2017-05-31 06:41:21,968 (7fcff9e3b700) :  INFO (__init__:187) - Artist result: Dr Dre Feat Eminem & Skylar Grey dist: 35 album bonus: 0 listeners: 6529 score: 55
2017-05-31 06:41:21,978 (7fcff9e3b700) :  INFO (__init__:193) - Skipping artist, didn't meet minimum score of 75
2017-05-31 06:41:21,984 (7fcff9e3b700) :  INFO (__init__:187) - Artist result: Dr. Dre feat. Snoop Dogg & Akon dist: 32 album bonus: 0 listeners: 5597 score: 58
2017-05-31 06:41:21,996 (7fcff9e3b700) :  INFO (__init__:193) - Skipping artist, didn't meet minimum score of 75
2017-05-31 06:41:22,003 (7fcff9e3b700) :  INFO (__init__:187) - Artist result: Dr. Dre & Ice Cube dist: 28 album bonus: 0 listeners: 10960 score: 62
2017-05-31 06:41:22,006 (7fcff9e3b700) :  INFO (__init__:193) - Skipping artist, didn't meet minimum score of 75
2017-05-31 06:41:22,013 (7fcff9e3b700) :  INFO (__init__:187) - Artist result: Dr Dre & Snoop Dogg dist: 31 album bonus: 0 listeners: 5492 score: 59
2017-05-31 06:41:22,017 (7fcff9e3b700) :  INFO (__init__:193) - Skipping artist, didn't meet minimum score of 75
2017-05-31 06:41:22,062 (7fcff9e3b700) :  DEBUG (networking:161) - Fetching 'http://lastfm-z.plexapp.com/2.0/?method=artist.getInfo&artist=dr.%20dre&autocorrect=1&lang=en&format=json&api_key=d5310352469c2631e5976d0f4a599773' from the HTTP cache
2017-05-31 06:41:22,151 (7fcff9e3b700) :  DEBUG (runtime:88) - Sending packed state data (590 bytes)
2017-05-31 06:41:22,155 (7fcff9e3b700) :  DEBUG (runtime:924) - Response: [200] str, 44492 bytes
2017-05-31 06:41:22,294 (7fcff9e3b700) :  DEBUG (runtime:717) - Handling request GET /:/plugins/com.plexapp.agents.lastfm/messaging/function/TWVzc2FnZUtpdDpBcnRpc3RUb3BUcmFja3M_/Y2VyZWFsMQoxCmxpc3QKMApyMAo_/Y2VyZWFsMQoxCmRpY3QKMgpzMgplbnM0CmxhbmdzNwpEci4gRHJlczYKYXJ0aXN0cjAK
2017-05-31 06:41:22,302 (7fcff9e3b700) :  DEBUG (runtime:49) - Received packed state data (564 bytes)
2017-05-31 06:41:22,317 (7fcff9e3b700) :  DEBUG (runtime:814) - Found route matching /:/plugins/com.plexapp.agents.lastfm/messaging/function/TWVzc2FnZUtpdDpBcnRpc3RUb3BUcmFja3M_/Y2VyZWFsMQoxCmxpc3QKMApyMAo_/Y2VyZWFsMQoxCmRpY3QKMgpzMgplbnM0CmxhbmdzNwpEci4gRHJlczYKYXJ0aXN0cjAK
2017-05-31 06:41:22,341 (7fcff9e3b700) :  DEBUG (networking:166) - Requesting 'http://lastfm-z.plexapp.com/2.0/?method=artist.getTopTracks&artist=dr.%20dre&lang=en&format=json&api_key=d5310352469c2631e5976d0f4a599773'
2017-05-31 06:41:22,807 (7fcff9e3b700) :  DEBUG (runtime:88) - Sending packed state data (590 bytes)
2017-05-31 06:41:22,810 (7fcff9e3b700) :  DEBUG (runtime:924) - Response: [200] str, 57076 bytes
2017-05-31 06:41:24,579 (7fcff9e3b700) :  DEBUG (runtime:717) - Handling request GET /:/plugins/com.plexapp.agents.lastfm/messaging/function/TWVzc2FnZUtpdDpBbGJ1bVNlYXJjaA__/Y2VyZWFsMQoxCmxpc3QKMApyMAo_/Y2VyZWFsMQoxCmRpY3QKNApzMgplbnM0Cmxhbmd1NwpDb21wdG9uczUKYWxidW1zNAoyMDE1czQKeWVhcnM3CkRyLiBEcmVzNgphcnRpc3RyMAo_
2017-05-31 06:41:24,586 (7fcff9e3b700) :  DEBUG (runtime:49) - Received packed state data (564 bytes)
2017-05-31 06:41:24,600 (7fcff9e3b700) :  DEBUG (runtime:814) - Found route matching /:/plugins/com.plexapp.agents.lastfm/messaging/function/TWVzc2FnZUtpdDpBbGJ1bVNlYXJjaA__/Y2VyZWFsMQoxCmxpc3QKMApyMAo_/Y2VyZWFsMQoxCmRpY3QKNApzMgplbnM0Cmxhbmd1NwpDb21wdG9uczUKYWxidW1zNAoyMDE1czQKeWVhcnM3CkRyLiBEcmVzNgphcnRpc3RyMAo_
2017-05-31 06:41:24,661 (7fcff9e3b700) :  DEBUG (networking:161) - Fetching 'http://lastfm-z.plexapp.com/2.0/?method=artist.gettopalbums&artist=dr.%20dre&page=1&limit=50&format=json&api_key=d5310352469c2631e5976d0f4a599773' from the HTTP cache
2017-05-31 06:41:24,740 (7fcff9e3b700) :  DEBUG (networking:166) - Requesting 'http://lastfm-z.plexapp.com/2.0/?method=artist.gettopalbums&artist=dr.%20dre&page=2&limit=50&format=json&api_key=d5310352469c2631e5976d0f4a599773'
2017-05-31 06:41:25,012 (7fcff9e3b700) :  DEBUG (networking:166) - Requesting 'http://lastfm-z.plexapp.com/2.0/?method=artist.gettopalbums&artist=dr.%20dre&page=3&limit=50&format=json&api_key=d5310352469c2631e5976d0f4a599773'
2017-05-31 06:41:25,309 (7fcff9e3b700) :  DEBUG (networking:166) - Requesting 'http://lastfm-z.plexapp.com/2.0/?method=artist.gettopalbums&artist=dr.%20dre&page=4&limit=50&format=json&api_key=d5310352469c2631e5976d0f4a599773'
2017-05-31 06:41:25,604 (7fcff9e3b700) :  DEBUG (networking:166) - Requesting 'http://lastfm-z.plexapp.com/2.0/?method=album.getInfo&artist=dr.%20dre&album=compton&autocorrect=1&lang=en&format=json&api_key=d5310352469c2631e5976d0f4a599773'
2017-05-31 06:41:25,954 (7fcff9e3b700) :  DEBUG (runtime:88) - Sending packed state data (590 bytes)
2017-05-31 06:41:25,958 (7fcff9e3b700) :  DEBUG (runtime:924) - Response: [200] str, 8528 bytes
2017-05-31 06:41:26,609 (7fcff9e3b700) :  DEBUG (runtime:717) - Handling request GET /:/plugins/com.plexapp.agents.lastfm/messaging/function/TWVzc2FnZUtpdDpBcnRpc3RTZWFyY2g_/Y2VyZWFsMQoxCmxpc3QKMApyMAo_/Y2VyZWFsMQoyCmRpY3QKbGlzdAozCnMyCmVuczQKbGFuZ3IxCnM2CmFsYnVtc3M1ClNwb29uczYKYXJ0aXN0MQpzMTQKR2EgR2EgR2EgR2EgR2FyMAo_
2017-05-31 06:41:26,618 (7fcff9e3b700) :  DEBUG (runtime:49) - Received packed state data (564 bytes)
2017-05-31 06:41:26,629 (7fcff9e3b700) :  DEBUG (runtime:814) - Found route matching /:/plugins/com.plexapp.agents.lastfm/messaging/function/TWVzc2FnZUtpdDpBcnRpc3RTZWFyY2g_/Y2VyZWFsMQoxCmxpc3QKMApyMAo_/Y2VyZWFsMQoyCmRpY3QKbGlzdAozCnMyCmVuczQKbGFuZ3IxCnM2CmFsYnVtc3M1ClNwb29uczYKYXJ0aXN0MQpzMTQKR2EgR2EgR2EgR2EgR2FyMAo_
2017-05-31 06:41:26,709 (7fcffa7fc700) :  DEBUG (runtime:717) - Handling request GET /:/plugins/com.plexapp.agents.%2AUmVhZCBtb3JlIG9uIExhc3QuZm08L2E%2ALiBVc2VyLWNvbnRyaWJ1dGVkIHRleHQgaXMgYXZhaWxhYmxlIHVuZGVyIHRoZSBDcmVhdGl2ZSBDb21tb25zIEJ5LVNBIExpY2Vuc2U7IGFkZGl0aW9uYWwgdGVybXMgbWF5IGFwcGx5LnM3CmNvbnRlbnRzMTgKMTIgRmViIDIwMDYsIDAxOjAxczkKcHVibGlzaGVkcjMKczUKbGlua3N1NTYwCkFuZHLDqSBSb21lbGxlIFlvdW5nIChib3JuIEZlYnJ1YXJ5IDE4LCAxOTY1IGluIExvcyBBbmdlbGVzLCBDYWxpZm9ybmlhKSwgYmV0dGVyIGtub3duIGJ5IGhpcyBzdGFnZSBuYW1lIERyLiBEcmUsIGlzIGFuIEFtZXJpY2FuIHJlY29yZCBwcm9kdWNlciwgcmFwcGVyLCBhY3RvciBhbmQgcmVjb3JkIGV4ZWN1dGl2ZS4gSGUgaXMgdGhlIGZvdW5kZXIgYW5kIGN1cnJlbnQgQ0VPIG9mIEFmdGVybWF0aCBFbnRlcnRhaW5tZW50IGFuZCBhIGZvcm1lciBjby1vd25lciBhbmQgYXJ0aXN0IG9mIERlYXRoIFJvdyBSZWNvcmRzLCBhbHNvIGhhdmluZyBwcm9kdWNlZCBhbGJ1bXMgZm9yIGFuZCBvdmVyc2VlaW5nIHRoZSBjYXJlZXJzIG9mIG1hbnkgcmFwcGVycyBzaWduZWQgdG8gdGhvc2UgcmVjb3JkIGxhYmVscy4gQXMgYSBwcm9kdWNlciBoZSBpcyBjcmVkaXRlZCBhcyBhIGtleSBmaWd1cmUgaW4gdGhlIHBvcHVsYXJpemF0aW9uIG9mIFdlc3QgQ29hc3QgRy1mdW5rIDxhIGhyZWY9Imh0dHBzOi8vd3d3Lmxhc3QuZm0vbXVzaWMvRHIuK0RyZSI%2AUmVhZCBtb3JlIG9uIExhc3QuZm08L2E%2AczcKc3VtbWFyeTEKcjQKczQKbGluazMKdTAKczUKI3RleHRzMzUKaHR0cHM6Ly9sYXN0LmZtL211c2ljL0RyLitEcmUvK3dpa2lzNApocmVmczgKb3JpZ2luYWxzMwpyZWwyCnM3CjIyMTMwODFzOQpsaXN0ZW5lcnNzOAozNTc3NjQ1N3M5CnBsYXljb3VudDEKcjcKczMKdGFnNQpyOApyOQpyMTAKcjExCnIxMgoyCnMzMQpodHRwczovL3d3dy5sYXN0LmZtL3RhZy9IaXAtSG9wczMKdXJsczcKSGlwLUhvcHM0Cm5hbWUyCnMyNwpodHRwczovL3d3dy5sYXN0LmZtL3RhZy9yYXBzMwp1cmxzMwpyYXBzNApuYW1lMgpzMzUKaHR0cHM6Ly93d3cubGFzdC5mbS90YWcvR2FuZ3N0YStSYXBzMwp1cmxzMTEKR2FuZ3N0YSBSYXBzNApuYW1lMgpzMzEKaHR0cHM6Ly93d3cubGFzdC5mbS90YWcvaGlwK2hvcHMzCnVybHM3CmhpcCBob3BzNApuYW1lMgpzMzQKaHR0cHM6Ly93d3cubGFzdC5mbS90YWcvd2VzdCtjb2FzdHMzCnVybHMxMAp3ZXN0IGNvYXN0czQKbmFtZTYKcjE0CnIxNQpyMTYKcjE3CnIxOApyMTkKMgpzNzgKaHR0cHM6Ly9sYXN0Zm0taW1nMi5ha2FtYWl6ZWQubmV0L2kvdS8zNHMvMzkwN2I0ZmQ1ZTRiNGFiYjgyNjBhOWMwY2Y2YWQ1NTAucG5nczUKI3RleHRzNQpzbWFsbHM0CnNpemUyCnM3OApodHRwczovL2xhc3RmbS1pbWcyLmFrYW1haXplZC5uZXQvaS91LzY0cy8zOTA3YjRmZDVlNGI0YWJiODI2MGE5YzBjZjZhZDU1MC5wbmdzNQojdGV4dHM2Cm1lZGl1bXM0CnNpemUyCnM3OQpodHRwczovL2xhc3RmbS1pbWcyLmFrYW1haXplZC5uZXQvaS91LzE3NHMvMzkwN2I0ZmQ1ZTRiNGFiYjgyNjBhOWMwY2Y2YWQ1NTAucG5nczUKI3RleHRzNQpsYXJnZXM0CnNpemUyCnM4MgpodHRwczovL2xhc3RmbS1pbWcyLmFrYW1haXplZC5uZXQvaS91LzMwMHgzMDAvMzkwN2I0ZmQ1ZTRiNGFiYjgyNjBhOWMwY2Y2YWQ1NTAucG5nczUKI3RleHRzMTAKZXh0cmFsYXJnZXM0CnNpemUyCnM3NApodHRwczovL2xhc3RmbS1pbWcyLmFrYW1haXplZC5uZXQvaS91LzM5MDdiNGZkNWU0YjRhYmI4MjYwYTljMGNmNmFkNTUwLnBuZ3M1CiN0ZXh0czQKbWVnYXM0CnNpemUyCnM3OApodHRwczovL2xhc3RmbS1pbWcyLmFrYW1haXplZC5uZXQvaS91L2FyUS8zOTA3YjRmZDVlNGI0YWJiODI2MGE5YzBjZjZhZDU1MC5wbmdzNQojdGV4dHUwCnM0CnNpemUxCnIyMQpzNgphcnRpc3Q1CnIyMgpyMzAKcjM4CnI0NgpyNTQKMwpzMzYKaHR0cHM6Ly93d3cubGFzdC5mbS9tdXNpYy9Tbm9vcCtEb2dnczMKdXJscjIzCnM1CmltYWdlczEwClNub29wIERvZ2dzNApuYW1lNgpyMjQKcjI1CnIyNgpyMjcKcjI4CnIyOQoyCnM3OApodHRwczovL2xhc3RmbS1pbWcyLmFrYW1haXplZC5uZXQvaS91LzM0cy8zZTcwZTQ2NDkyNDE0NTkyYTNjMzAwMzdhMzdmYzNiMC5wbmdzNQojdGV4dHM1CnNtYWxsczQKc2l6ZTIKczc4Cmh0dHBzOi8vbGFzdGZtLWltZzIuYWthbWFpemVkLm5ldC9pL3UvNjRzLzNlNzBlNDY0OTI0MTQ1OTJhM2MzMDAzN2EzN2ZjM2IwLnBuZ3M1CiN0ZXh0czYKbWVkaXVtczQKc2l6ZTIKczc5Cmh0dHBzOi8vbGFzdGZtLWltZzIuYWthbWFpemVkLm5ldC9pL3UvMTc0cy8zZTcwZTQ2NDkyNDE0NTkyYTNjMzAwMzdhMzdmYzNiMC5wbmdzNQojdGV4dHM1CmxhcmdlczQKc2l6ZTIKczgyCmh0dHBzOi8vbGFzdGZtLWltZzIuYWthbWFpemVkLm5ldC9pL3UvMzAweDMwMC8zZTcwZTQ2NDkyNDE0NTkyYTNjMzAwMzdhMzdmYzNiMC5wbmdzNQojdGV4dHMxMApleHRyYWxhcmdlczQKc2l6ZTIKczc0Cmh0dHBzOi8vbGFzdGZtLWltZzIuYWthbWFpemVkLm5ldC9pL3UvM2U3MGU0NjQ5MjQxNDU5MmEzYzMwMDM3YTM3ZmMzYjAucG5nczUKI3RleHRzNAptZWdhczQKc2l6ZTIKczc4Cmh0dHBzOi8vbGFzdGZtLWltZzIuYWthbWFpemVkLm5ldC9pL3UvYXJRLzNlNzBlNDY0OTI0MTQ1OTJhM2MzMDAzN2EzN2ZjM2IwLnBuZ3M1CiN0ZXh0dTAKczQKc2l6ZTMKczMxCmh0dHBzOi8vd3d3Lmxhc3QuZm0vbXVzaWMvTi5XLkFzMwp1cmxyMzEKczUKaW1hZ2VzNQpOLlcuQXM0Cm5hbWU2CnIzMgpyMzMKcjM0CnIzNQpyMzYKcjM3CjIKczc4Cmh0dHBzOi8vbGFzdGZtLWltZzIuYWthbWFpemVkLm5ldC9pL3UvMzRzL2UwM2RkZWMwMzUwMzQwMDZhNjQ2OTZjY2Y4NjNkMDJmLnBuZ3M1CiN0ZXh0czUKc21hbGxzNApzaXplMgpzNzgKaHR0cHM6Ly9sYXN0Zm0taW1nMi5ha2FtYWl6ZWQubmV0L2kvdS82NHMvZTAzZGRlYzAzNTAzNDAwNmE2NDY5NmNjZjg2M2QwMmYucG5nczUKI3RleHRzNgptZWRpdW1zNApzaXplMgpzNzkKaHR0cHM6Ly9sYXN0Zm0taW1nMi5ha2FtYWl6ZWQubmV0L2kvdS8xNzRzL2UwM2RkZWMwMzUwMzQwMDZhNjQ2OTZjY2Y4NjNkMDJmLnBuZ3M1CiN0ZXh0czUKbGFyZ2VzNApzaXplMgpzODIKaHR0cHM6Ly9sYXN0Zm0taW1nMi5ha2FtYWl6ZWQubmV0L2kvdS8zMDB4MzAwL2UwM2RkZWMwMzUwMzQwMDZhNjQ2OTZjY2Y4NjNkMDJmLnBuZ3M1CiN0ZXh0czEwCmV4dHJhbGFyZ2VzNApzaXplMgpzNzQKaHR0cHM6Ly9sYXN0Zm0taW1nMi5ha2FtYWl6ZWQubmV0L2kvdS9lMDNkZGVjMDM1MDM0MDA2YTY0Njk2Y2NmODYzZDAyZi5wbmdzNQojdGV4dHM0Cm1lZ2FzNApzaXplMgpzNzgKaHR0cHM6Ly9sYXN0Zm0taW1nMi5ha2FtYWl6ZWQubmV0L2kvdS9hclEvZTAzZGRlYzAzNTAzNDAwNmE2NDY5NmNjZjg2M2QwMmYucG5nczUKI3RleHR1MApzNApzaXplMwpzMzQKaHR0cHM6Ly93d3cubGFzdC5mbS9tdXNpYy9JY2UrQ3ViZXMzCnVybHIzOQpzNQppbWFnZXM4CkljZSBDdWJlczQKbmFtZTYKcjQwCnI0MQpyNDIKcjQzCnI0NApyNDUKMgpzNzgKaHR0cHM6Ly9sYXN0Zm0taW1nMi5ha2FtYWl6ZWQubmV0L2kvdS8zNHMvNjM2MDA4MjgyMDkwNDMzNGE3ZDk3ZjA4ZmJhZTE2OGUucG5nczUKI3RleHRzNQpzbWFsbHM0CnNpemUyCnM3OApodHRwczovL2xhc3RmbS1pbWcyLmFrYW1haXplZC5uZXQvaS91LzY0cy82MzYwMDgyODIwOTA0MzM0YTdkOTdmMDhmYmFlMTY4ZS5wbmdzNQojdGV4dHM2Cm1lZGl1bXM0CnNpemUyCnM3OQpodHRwczovL2xhc3RmbS1pbWcyLmFrYW1haXplZC5uZXQvaS91LzE3NHMvNjM2MDA4MjgyMDkwNDMzNGE3ZDk3ZjA4ZmJhZTE2OGUucG5nczUKI3RleHRzNQpsYXJnZXM0CnNpemUyCnM4MgpodHRwczovL2xhc3RmbS1pbWcyLmFrYW1haXplZC5uZXQvaS91LzMwMHgzMDAvNjM2MDA4MjgyMDkwNDMzNGE3ZDk3ZjA4ZmJhZTE2OGUucG5nczUKI3RleHRzMTAKZXh0cmFsYXJnZXM0CnNpemUyCnM3NApodHRwczovL2xhc3RmbS1pbWcyLmFrYW1haXplZC5uZXQvaS91LzYzNjAwODI4MjA5MDQzMzRhN2Q5N2YwOGZiYWUxNjhlLnBuZ3M1CiN0ZXh0czQKbWVnYXM0CnNpemUyCnM3OApodHRwczovL2xhc3RmbS1pbWcyLmFrYW1haXplZC5uZXQvaS91L2FyUS82MzYwMDgyODIwOTA0MzM0YTdkOTdmMDhmYmFlMTY4ZS5wbmdzNQojdGV4dHUwCnM0CnNpemUzCnMzNApodHRwczovL3d3dy5sYXN0LmZtL211c2ljL1RoZStHYW1lczMKdXJscjQ3CnM1CmltYWdlczgKVGhlIEdhbWVzNApuYW1lNgpyNDgKcjQ5CnI1MApyNTEKcjUyCnI1MwoyCnM3OApodHRwczovL2xhc3RmbS1pbWcyLmFrYW1haXplZC5uZXQvaS91LzM0cy9iNzVlYmJhY2FmZTM0ZjJhOWRhYzA1MjhiOGQ3NWYxMC5wbmdzNQojdGV4dHM1CnNtYWxsczQKc2l6ZTIKczc4Cmh0dHBzOi8vbGFzdGZtLWltZzIuYWthbWFpemVkLm5ldC9pL3UvNjRzL2I3NWViYmFjYWZlMzRmMmE5ZGFjMDUyOGI4ZDc1ZjEwLnBuZ3M1CiN0ZXh0czYKbWVkaXVtczQKc2l6ZTIKczc5Cmh0dHBzOi8vbGFzdGZtLWltZzIuYWthbWFpemVkLm5ldC9pL3UvMTc0cy9iNzVlYmJhY2FmZTM0ZjJhOWRhYzA1MjhiOGQ3NWYxMC5wbmdzNQojdGV4dHM1CmxhcmdlczQKc2l6ZTIKczgyCmh0dHBzOi8vbGFzdGZtLWltZzIuYWthbWFpemVkLm5ldC9pL3UvMzAweDMwMC9iNzVlYmJhY2FmZTM0ZjJhOWRhYzA1MjhiOGQ3NWYxMC5wbmdzNQojdGV4dHMxMApleHRyYWxhcmdlczQKc2l6ZTIKczc0Cmh0dHBzOi8vbGFzdGZtLWltZzIuYWthbWFpemVkLm5ldC9pL3UvYjc1ZWJiYWNhZmUzNGYyYTlkYWMwNTI4YjhkNzVmMTAucG5nczUKI3RleHRzNAptZWdhczQKc2l6ZTIKczc4Cmh0dHBzOi8vbGFzdGZtLWltZzIuYWthbWFpemVkLm5ldC9pL3UvYXJRL2I3NWViYmFjYWZlMzRmMmE5ZGFjMDUyOGI4ZDc1ZjEwLnBuZ3M1CiN0ZXh0dTAKczQKc2l6ZTMKczMyCmh0dHBzOi8vd3d3Lmxhc3QuZm0vbXVzaWMvRWF6eS1FczMKdXJscjU1CnM1CmltYWdlczYKRWF6eS1FczQKbmFtZTYKcjU2CnI1NwpyNTgKcjU5CnI2MApyNjEKMgpzNzgKaHR0cHM6Ly9sYXN0Zm0taW1nMi5ha2FtYWl6ZWQubmV0L2kvdS8zNHMvNDI5ZDMzMzhjNjkxNDgzOGFjMTYxYmQ1Y2JlMzM1MDIucG5nczUKI3RleHRzNQpzbWFsbHM0CnNpemUyCnM3OApodHRwczovL2xhc3RmbS1pbWcyLmFrYW1haXplZC5uZXQvaS91LzY0cy80MjlkMzMzOGM2OTE0ODM4YWMxNjFiZDVjYmUzMzUwMi5wbmdzNQojdGV4dHM2Cm1lZGl1bXM0CnNpemUyCnM3OQpodHRwczovL2xhc3RmbS1pbWcyLmFrYW1haXplZC5uZXQvaS91LzE3NHMvNDI5ZDMzMzhjNjkxNDgzOGFjMTYxYmQ1Y2JlMzM1MDIucG5nczUKI3RleHRzNQpsYXJnZXM0CnNpemUyCnM4MgpodHRwczovL2xhc3RmbS1pbWcyLmFrYW1haXplZC5uZXQvaS91LzMwMHgzMDAvNDI5ZDMzMzhjNjkxNDgzOGFjMTYxYmQ1Y2JlMzM1MDIucG5nczUKI3RleHRzMTAKZXh0cmFsYXJnZXM0CnNpemUyCnM3NApodHRwczovL2xhc3RmbS1pbWcyLmFrYW1haXplZC5uZXQvaS91LzQyOWQzMzM4YzY5MTQ4MzhhYzE2MWJkNWNiZTMzNTAyLnBuZ3M1CiN0ZXh0czQKbWVnYXM0CnNpemUyCnM3OApodHRwczovL2xhc3RmbS1pbWcyLmFrYW1haXplZC5uZXQvaS91L2FyUS80MjlkMzMzOGM2OTE0ODM4YWMxNjFiZDVjYmUzMzUwMi5wbmdzNQojdGV4dHUwCnM0CnNpemVyMAo_
2017-05-31 06:41:26,714 (7fcff9e3b700) :  DEBUG (networking:161) - Fetching 'http://lastfm-z.plexapp.com/2.0/?method=artist.search&artist=spoon&page=1&limit=9&format=json&api_key=d5310352469c2631e5976d0f4a599773' from the HTTP cache
2017-05-31 06:41:26,732 (7fcffa7fc700) :  DEBUG (runtime:49) - Received packed state data (556 bytes)
2017-05-31 06:41:26,771 (7fcffa7fc700) :  DEBUG (runtime:814) - Found route matching /:/plugins/com.plexapp.agents.*UmVhZCBtb3JlIG9uIExhc3QuZm08L2E*LiBVc2VyLWNvbnRyaWJ1dGVkIHRleHQgaXMgYXZhaWxhYmxlIHVuZGVyIHRoZSBDcmVhdGl2ZSBDb21tb25zIEJ5LVNBIExpY2Vuc2U7IGFkZGl0aW9uYWwgdGVybXMgbWF5IGFwcGx5LnM3CmNvbnRlbnRzMTgKMTIgRmViIDIwMDYsIDAxOjAxczkKcHVibGlzaGVkcjMKczUKbGlua3N1NTYwCkFuZHLDqSBSb21lbGxlIFlvdW5nIChib3JuIEZlYnJ1YXJ5IDE4LCAxOTY1IGluIExvcyBBbmdlbGVzLCBDYWxpZm9ybmlhKSwgYmV0dGVyIGtub3duIGJ5IGhpcyBzdGFnZSBuYW1lIERyLiBEcmUsIGlzIGFuIEFtZXJpY2FuIHJlY29yZCBwcm9kdWNlciwgcmFwcGVyLCBhY3RvciBhbmQgcmVjb3JkIGV4ZWN1dGl2ZS4gSGUgaXMgdGhlIGZvdW5kZXIgYW5kIGN1cnJlbnQgQ0VPIG9mIEFmdGVybWF0aCBFbnRlcnRhaW5tZW50IGFuZCBhIGZvcm1lciBjby1vd25lciBhbmQgYXJ0aXN0IG9mIERlYXRoIFJvdyBSZWNvcmRzLCBhbHNvIGhhdmluZyBwcm9kdWNlZCBhbGJ1bXMgZm9yIGFuZCBvdmVyc2VlaW5nIHRoZSBjYXJlZXJzIG9mIG1hbnkgcmFwcGVycyBzaWduZWQgdG8gdGhvc2UgcmVjb3JkIGxhYmVscy4gQXMgYSBwcm9kdWNlciBoZSBpcyBjcmVkaXRlZCBhcyBhIGtleSBmaWd1cmUgaW4gdGhlIHBvcHVsYXJpemF0aW9uIG9mIFdlc3QgQ29hc3QgRy1mdW5rIDxhIGhyZWY9Imh0dHBzOi8vd3d3Lmxhc3QuZm0vbXVzaWMvRHIuK0RyZSI*UmVhZCBtb3JlIG9uIExhc3QuZm08L2E*czcKc3VtbWFyeTEKcjQKczQKbGluazMKdTAKczUKI3RleHRzMzUKaHR0cHM6Ly9sYXN0LmZtL211c2ljL0RyLitEcmUvK3dpa2lzNApocmVmczgKb3JpZ2luYWxzMwpyZWwyCnM3CjIyMTMwODFzOQpsaXN0ZW5lcnNzOAozNTc3NjQ1N3M5CnBsYXljb3VudDEKcjcKczMKdGFnNQpyOApyOQpyMTAKcjExCnIxMgoyCnMzMQpodHRwczovL3d3dy5sYXN0LmZtL3RhZy9IaXAtSG9wczMKdXJsczcKSGlwLUhvcHM0Cm5hbWUyCnMyNwpodHRwczovL3d3dy5sYXN0LmZtL3RhZy9yYXBzMwp1cmxzMwpyYXBzNApuYW1lMgpzMzUKaHR0cHM6Ly93d3cubGFzdC5mbS90YWcvR2FuZ3N0YStSYXBzMwp1cmxzMTEKR2FuZ3N0YSBSYXBzNApuYW1lMgpzMzEKaHR0cHM6Ly93d3cubGFzdC5mbS90YWcvaGlwK2hvcHMzCnVybHM3CmhpcCBob3BzNApuYW1lMgpzMzQKaHR0cHM6Ly93d3cubGFzdC5mbS90YWcvd2VzdCtjb2FzdHMzCnVybHMxMAp3ZXN0IGNvYXN0czQKbmFtZTYKcjE0CnIxNQpyMTYKcjE3CnIxOApyMTkKMgpzNzgKaHR0cHM6Ly9sYXN0Zm0taW1nMi5ha2FtYWl6ZWQubmV0L2kvdS8zNHMvMzkwN2I0ZmQ1ZTRiNGFiYjgyNjBhOWMwY2Y2YWQ1NTAucG5nczUKI3RleHRzNQpzbWFsbHM0CnNpemUyCnM3OApodHRwczovL2xhc3RmbS1pbWcyLmFrYW1haXplZC5uZXQvaS91LzY0cy8zOTA3YjRmZDVlNGI0YWJiODI2MGE5YzBjZjZhZDU1MC5wbmdzNQojdGV4dHM2Cm1lZGl1bXM0CnNpemUyCnM3OQpodHRwczovL2xhc3RmbS1pbWcyLmFrYW1haXplZC5uZXQvaS91LzE3NHMvMzkwN2I0ZmQ1ZTRiNGFiYjgyNjBhOWMwY2Y2YWQ1NTAucG5nczUKI3RleHRzNQpsYXJnZXM0CnNpemUyCnM4MgpodHRwczovL2xhc3RmbS1pbWcyLmFrYW1haXplZC5uZXQvaS91LzMwMHgzMDAvMzkwN2I0ZmQ1ZTRiNGFiYjgyNjBhOWMwY2Y2YWQ1NTAucG5nczUKI3RleHRzMTAKZXh0cmFsYXJnZXM0CnNpemUyCnM3NApodHRwczovL2xhc3RmbS1pbWcyLmFrYW1haXplZC5uZXQvaS91LzM5MDdiNGZkNWU0YjRhYmI4MjYwYTljMGNmNmFkNTUwLnBuZ3M1CiN0ZXh0czQKbWVnYXM0CnNpemUyCnM3OApodHRwczovL2xhc3RmbS1pbWcyLmFrYW1haXplZC5uZXQvaS91L2FyUS8zOTA3YjRmZDVlNGI0YWJiODI2MGE5YzBjZjZhZDU1MC5wbmdzNQojdGV4dHUwCnM0CnNpemUxCnIyMQpzNgphcnRpc3Q1CnIyMgpyMzAKcjM4CnI0NgpyNTQKMwpzMzYKaHR0cHM6Ly93d3cubGFzdC5mbS9tdXNpYy9Tbm9vcCtEb2dnczMKdXJscjIzCnM1CmltYWdlczEwClNub29wIERvZ2dzNApuYW1lNgpyMjQKcjI1CnIyNgpyMjcKcjI4CnIyOQoyCnM3OApodHRwczovL2xhc3RmbS1pbWcyLmFrYW1haXplZC5uZXQvaS91LzM0cy8zZTcwZTQ2NDkyNDE0NTkyYTNjMzAwMzdhMzdmYzNiMC5wbmdzNQojdGV4dHM1CnNtYWxsczQKc2l6ZTIKczc4Cmh0dHBzOi8vbGFzdGZtLWltZzIuYWthbWFpemVkLm5ldC9pL3UvNjRzLzNlNzBlNDY0OTI0MTQ1OTJhM2MzMDAzN2EzN2ZjM2IwLnBuZ3M1CiN0ZXh0czYKbWVkaXVtczQKc2l6ZTIKczc5Cmh0dHBzOi8vbGFzdGZtLWltZzIuYWthbWFpemVkLm5ldC9pL3UvMTc0cy8zZTcwZTQ2NDkyNDE0NTkyYTNjMzAwMzdhMzdmYzNiMC5wbmdzNQojdGV4dHM1CmxhcmdlczQKc2l6ZTIKczgyCmh0dHBzOi8vbGFzdGZtLWltZzIuYWthbWFpemVkLm5ldC9pL3UvMzAweDMwMC8zZTcwZTQ2NDkyNDE0NTkyYTNjMzAwMzdhMzdmYzNiMC5wbmdzNQojdGV4dHMxMApleHRyYWxhcmdlczQKc2l6ZTIKczc0Cmh0dHBzOi8vbGFzdGZtLWltZzIuYWthbWFpemVkLm5ldC9pL3UvM2U3MGU0NjQ5MjQxNDU5MmEzYzMwMDM3YTM3ZmMzYjAucG5nczUKI3RleHRzNAptZWdhczQKc2l6ZTIKczc4Cmh0dHBzOi8vbGFzdGZtLWltZzIuYWthbWFpemVkLm5ldC9pL3UvYXJRLzNlNzBlNDY0OTI0MTQ1OTJhM2MzMDAzN2EzN2ZjM2IwLnBuZ3M1CiN0ZXh0dTAKczQKc2l6ZTMKczMxCmh0dHBzOi8vd3d3Lmxhc3QuZm0vbXVzaWMvTi5XLkFzMwp1cmxyMzEKczUKaW1hZ2VzNQpOLlcuQXM0Cm5hbWU2CnIzMgpyMzMKcjM0CnIzNQpyMzYKcjM3CjIKczc4Cmh0dHBzOi8vbGFzdGZtLWltZzIuYWthbWFpemVkLm5ldC9pL3UvMzRzL2UwM2RkZWMwMzUwMzQwMDZhNjQ2OTZjY2Y4NjNkMDJmLnBuZ3M1CiN0ZXh0czUKc21hbGxzNApzaXplMgpzNzgKaHR0cHM6Ly9sYXN0Zm0taW1nMi5ha2FtYWl6ZWQubmV0L2kvdS82NHMvZTAzZGRlYzAzNTAzNDAwNmE2NDY5NmNjZjg2M2QwMmYucG5nczUKI3RleHRzNgptZWRpdW1zNApzaXplMgpzNzkKaHR0cHM6Ly9sYXN0Zm0taW1nMi5ha2FtYWl6ZWQubmV0L2kvdS8xNzRzL2UwM2RkZWMwMzUwMzQwMDZhNjQ2OTZjY2Y4NjNkMDJmLnBuZ3M1CiN0ZXh0czUKbGFyZ2VzNApzaXplMgpzODIKaHR0cHM6Ly9sYXN0Zm0taW1nMi5ha2FtYWl6ZWQubmV0L2kvdS8zMDB4MzAwL2UwM2RkZWMwMzUwMzQwMDZhNjQ2OTZjY2Y4NjNkMDJmLnBuZ3M1CiN0ZXh0czEwCmV4dHJhbGFyZ2VzNApzaXplMgpzNzQKaHR0cHM6Ly9sYXN0Zm0taW1nMi5ha2FtYWl6ZWQubmV0L2kvdS9lMDNkZGVjMDM1MDM0MDA2YTY0Njk2Y2NmODYzZDAyZi5wbmdzNQojdGV4dHM0Cm1lZ2FzNApzaXplMgpzNzgKaHR0cHM6Ly9sYXN0Zm0taW1nMi5ha2FtYWl6ZWQubmV0L2kvdS9hclEvZTAzZGRlYzAzNTAzNDAwNmE2NDY5NmNjZjg2M2QwMmYucG5nczUKI3RleHR1MApzNApzaXplMwpzMzQKaHR0cHM6Ly93d3cubGFzdC5mbS9tdXNpYy9JY2UrQ3ViZXMzCnVybHIzOQpzNQppbWFnZXM4CkljZSBDdWJlczQKbmFtZTYKcjQwCnI0MQpyNDIKcjQzCnI0NApyNDUKMgpzNzgKaHR0cHM6Ly9sYXN0Zm0taW1nMi5ha2FtYWl6ZWQubmV0L2kvdS8zNHMvNjM2MDA4MjgyMDkwNDMzNGE3ZDk3ZjA4ZmJhZTE2OGUucG5nczUKI3RleHRzNQpzbWFsbHM0CnNpemUyCnM3OApodHRwczovL2xhc3RmbS1pbWcyLmFrYW1haXplZC5uZXQvaS91LzY0cy82MzYwMDgyODIwOTA0MzM0YTdkOTdmMDhmYmFlMTY4ZS5wbmdzNQojdGV4dHM2Cm1lZGl1bXM0CnNpemUyCnM3OQpodHRwczovL2xhc3RmbS1pbWcyLmFrYW1haXplZC5uZXQvaS91LzE3NHMvNjM2MDA4MjgyMDkwNDMzNGE3ZDk3ZjA4ZmJhZTE2OGUucG5nczUKI3RleHRzNQpsYXJnZXM0CnNpemUyCnM4MgpodHRwczovL2xhc3RmbS1pbWcyLmFrYW1haXplZC5uZXQvaS91LzMwMHgzMDAvNjM2MDA4MjgyMDkwNDMzNGE3ZDk3ZjA4ZmJhZTE2OGUucG5nczUKI3RleHRzMTAKZXh0cmFsYXJnZXM0CnNpemUyCnM3NApodHRwczovL2xhc3RmbS1pbWcyLmFrYW1haXplZC5uZXQvaS91LzYzNjAwODI4MjA5MDQzMzRhN2Q5N2YwOGZiYWUxNjhlLnBuZ3M1CiN0ZXh0czQKbWVnYXM0CnNpemUyCnM3OApodHRwczovL2xhc3RmbS1pbWcyLmFrYW1haXplZC5uZXQvaS91L2FyUS82MzYwMDgyODIwOTA0MzM0YTdkOTdmMDhmYmFlMTY4ZS5wbmdzNQojdGV4dHUwCnM0CnNpemUzCnMzNApodHRwczovL3d3dy5sYXN0LmZtL211c2ljL1RoZStHYW1lczMKdXJscjQ3CnM1CmltYWdlczgKVGhlIEdhbWVzNApuYW1lNgpyNDgKcjQ5CnI1MApyNTEKcjUyCnI1MwoyCnM3OApodHRwczovL2xhc3RmbS1pbWcyLmFrYW1haXplZC5uZXQvaS91LzM0cy9iNzVlYmJhY2FmZTM0ZjJhOWRhYzA1MjhiOGQ3NWYxMC5wbmdzNQojdGV4dHM1CnNtYWxsczQKc2l6ZTIKczc4Cmh0dHBzOi8vbGFzdGZtLWltZzIuYWthbWFpemVkLm5ldC9pL3UvNjRzL2I3NWViYmFjYWZlMzRmMmE5ZGFjMDUyOGI4ZDc1ZjEwLnBuZ3M1CiN0ZXh0czYKbWVkaXVtczQKc2l6ZTIKczc5Cmh0dHBzOi8vbGFzdGZtLWltZzIuYWthbWFpemVkLm5ldC9pL3UvMTc0cy9iNzVlYmJhY2FmZTM0ZjJhOWRhYzA1MjhiOGQ3NWYxMC5wbmdzNQojdGV4dHM1CmxhcmdlczQKc2l6ZTIKczgyCmh0dHBzOi8vbGFzdGZtLWltZzIuYWthbWFpemVkLm5ldC9pL3UvMzAweDMwMC9iNzVlYmJhY2FmZTM0ZjJhOWRhYzA1MjhiOGQ3NWYxMC5wbmdzNQojdGV4dHMxMApleHRyYWxhcmdlczQKc2l6ZTIKczc0Cmh0dHBzOi8vbGFzdGZtLWltZzIuYWthbWFpemVkLm5ldC9pL3UvYjc1ZWJiYWNhZmUzNGYyYTlkYWMwNTI4YjhkNzVmMTAucG5nczUKI3RleHRzNAptZWdhczQKc2l6ZTIKczc4Cmh0dHBzOi8vbGFzdGZtLWltZzIuYWthbWFpemVkLm5ldC9pL3UvYXJRL2I3NWViYmFjYWZlMzRmMmE5ZGFjMDUyOGI4ZDc1ZjEwLnBuZ3M1CiN0ZXh0dTAKczQKc2l6ZTMKczMyCmh0dHBzOi8vd3d3Lmxhc3QuZm0vbXVzaWMvRWF6eS1FczMKdXJscjU1CnM1CmltYWdlczYKRWF6eS1FczQKbmFtZTYKcjU2CnI1NwpyNTgKcjU5CnI2MApyNjEKMgpzNzgKaHR0cHM6Ly9sYXN0Zm0taW1nMi5ha2FtYWl6ZWQubmV0L2kvdS8zNHMvNDI5ZDMzMzhjNjkxNDgzOGFjMTYxYmQ1Y2JlMzM1MDIucG5nczUKI3RleHRzNQpzbWFsbHM0CnNpemUyCnM3OApodHRwczovL2xhc3RmbS1pbWcyLmFrYW1haXplZC5uZXQvaS91LzY0cy80MjlkMzMzOGM2OTE0ODM4YWMxNjFiZDVjYmUzMzUwMi5wbmdzNQojdGV4dHM2Cm1lZGl1bXM0CnNpemUyCnM3OQpodHRwczovL2xhc3RmbS1pbWcyLmFrYW1haXplZC5uZXQvaS91LzE3NHMvNDI5ZDMzMzhjNjkxNDgzOGFjMTYxYmQ1Y2JlMzM1MDIucG5nczUKI3RleHRzNQpsYXJnZXM0CnNpemUyCnM4MgpodHRwczovL2xhc3RmbS1pbWcyLmFrYW1haXplZC5uZXQvaS91LzMwMHgzMDAvNDI5ZDMzMzhjNjkxNDgzOGFjMTYxYmQ1Y2JlMzM1MDIucG5nczUKI3RleHRzMTAKZXh0cmFsYXJnZXM0CnNpemUyCnM3NApodHRwczovL2xhc3RmbS1pbWcyLmFrYW1haXplZC5uZXQvaS91LzQyOWQzMzM4YzY5MTQ4MzhhYzE2MWJkNWNiZTMzNTAyLnBuZ3M1CiN0ZXh0czQKbWVnYXM0CnNpemUyCnM3OApodHRwczovL2xhc3RmbS1pbWcyLmFrYW1haXplZC5uZXQvaS91L2FyUS80MjlkMzMzOGM2OTE0ODM4YWMxNjFiZDVjYmUzMzUwMi5wbmdzNQojdGV4dHUwCnM0CnNpemVyMAo_
2017-05-31 06:41:26,898 (7fcff9e3b700) :  INFO (__init__:201) - Fetching artist's albums and applying album bonus.
2017-05-31 06:41:26,933 (7fcffa7fc700) :  DEBUG (networking:166) - Requesting 'https://musicbrainz.plex.tv/ws/2/artist/5f6ab597-f57a-40da-be9e-adad48708203'
2017-05-31 06:41:27,005 (7fcff9e3b700) :  DEBUG (networking:161) - Fetching 'http://lastfm-z.plexapp.com/2.0/?method=artist.gettopalbums&artist=spoon&page=1&limit=50&format=json&api_key=d5310352469c2631e5976d0f4a599773' from the HTTP cache
2017-05-31 06:41:27,116 (7fcffa7fc700) :  DEBUG (networking:198) - Not caching 'https://musicbrainz.plex.tv/ws/2/artist/5f6ab597-f57a-40da-be9e-adad48708203' (content type 'application/octet-stream' not cacheable in Agent plug-ins)
2017-05-31 06:41:27,163 (7fcffa7fc700) :  DEBUG (networking:166) - Requesting 'https://musicbrainz.plex.tv/ws/2/artist/5f6ab597-f57a-40da-be9e-adad48708203'
2017-05-31 06:41:27,305 (7fcffa7fc700) :  DEBUG (networking:198) - Not caching 'https://musicbrainz.plex.tv/ws/2/artist/5f6ab597-f57a-40da-be9e-adad48708203' (content type 'application/octet-stream' not cacheable in Agent plug-ins)
2017-05-31 06:41:27,313 (7fcffa7fc700) :  INFO (__init__:77) - Found MBID: 5f6ab597-f57a-40da-be9e-adad48708203
2017-05-31 06:41:27,333 (7fcffa7fc700) :  DEBUG (runtime:88) - Sending packed state data (582 bytes)
2017-05-31 06:41:27,337 (7fcffa7fc700) :  DEBUG (runtime:924) - Response: [200] str, 68 bytes
2017-05-31 06:41:27,593 (7fcff9e3b700) :  INFO (__init__:225) - Applying album bonus of: 3
2017-05-31 06:41:27,598 (7fcff9e3b700) :  INFO (__init__:187) - Artist result: Spoon dist: -1 album bonus: 3 listeners: 1462264 score: 94
2017-05-31 06:41:27,604 (7fcff9e3b700) :  INFO (__init__:201) - Fetching artist's albums and applying album bonus.
2017-05-31 06:41:27,663 (7fcff9e3b700) :  DEBUG (networking:161) - Fetching 'http://lastfm-z.plexapp.com/2.0/?method=artist.gettopalbums&artist=the%20lovin%27%20spoonful&page=1&limit=50&format=json&api_key=d5310352469c2631e5976d0f4a599773' from the HTTP cache
2017-05-31 06:41:28,235 (7fcff9e3b700) :  INFO (__init__:187) - Artist result: The Lovin' Spoonful dist: 18 album bonus: 0 listeners: 558723 score: 72
2017-05-31 06:41:28,239 (7fcff9e3b700) :  INFO (__init__:193) - Skipping artist, didn't meet minimum score of 75
2017-05-31 06:41:28,243 (7fcff9e3b700) :  INFO (__init__:201) - Fetching artist's albums and applying album bonus.
2017-05-31 06:41:28,316 (7fcff9e3b700) :  DEBUG (networking:161) - Fetching 'http://lastfm-z.plexapp.com/2.0/?method=artist.gettopalbums&artist=spoonboy&page=1&limit=50&format=json&api_key=d5310352469c2631e5976d0f4a599773' from the HTTP cache
2017-05-31 06:41:28,995 (7fcff9e3b700) :  INFO (__init__:187) - Artist result: Spoonboy dist: 15 album bonus: 0 listeners: 30204 score: 75
2017-05-31 06:41:29,006 (7fcff9e3b700) :  INFO (__init__:201) - Fetching artist's albums and applying album bonus.
2017-05-31 06:41:29,141 (7fcff9e3b700) :  DEBUG (networking:161) - Fetching 'http://lastfm-z.plexapp.com/2.0/?method=artist.gettopalbums&artist=jam%20%26%20spoon&page=1&limit=50&format=json&api_key=d5310352469c2631e5976d0f4a599773' from the HTTP cache
2017-05-31 06:41:29,730 (7fcff9e3b700) :  INFO (__init__:187) - Artist result: Jam & Spoon dist: 29 album bonus: 0 listeners: 162227 score: 61
2017-05-31 06:41:29,733 (7fcff9e3b700) :  INFO (__init__:193) - Skipping artist, didn't meet minimum score of 75
2017-05-31 06:41:29,737 (7fcff9e3b700) :  INFO (__init__:201) - Fetching artist's albums and applying album bonus.
2017-05-31 06:41:29,809 (7fcff9e3b700) :  DEBUG (networking:161) - Fetching 'http://lastfm-z.plexapp.com/2.0/?method=artist.gettopalbums&artist=spoonbill&page=1&limit=50&format=json&api_key=d5310352469c2631e5976d0f4a599773' from the HTTP cache
2017-05-31 06:41:30,191 (7fcff9e3b700) :  INFO (__init__:187) - Artist result: Spoonbill dist: 17 album bonus: 0 listeners: 17591 score: 73
2017-05-31 06:41:30,194 (7fcff9e3b700) :  INFO (__init__:193) - Skipping artist, didn't meet minimum score of 75
2017-05-31 06:41:30,199 (7fcff9e3b700) :  INFO (__init__:187) - Artist result: Dave Spoon dist: 20 album bonus: 0 listeners: 90278 score: 70
2017-05-31 06:41:30,202 (7fcff9e3b700) :  INFO (__init__:193) - Skipping artist, didn't meet minimum score of 75
2017-05-31 06:41:30,207 (7fcff9e3b700) :  INFO (__init__:187) - Artist result: Rae Spoon dist: 17 album bonus: 0 listeners: 9154 score: 73
2017-05-31 06:41:30,211 (7fcff9e3b700) :  INFO (__init__:193) - Skipping artist, didn't meet minimum score of 75
2017-05-31 06:41:30,217 (7fcff9e3b700) :  INFO (__init__:187) - Artist result: T-Spoon dist: 5 album bonus: 0 listeners: 41767 score: 85
2017-05-31 06:41:30,234 (7fcff9e3b700) :  INFO (__init__:187) - Artist result: Spoons dist: 6 album bonus: 0 listeners: 6174 score: 84
2017-05-31 06:41:30,311 (7fcff9e3b700) :  DEBUG (networking:161) - Fetching 'http://lastfm-z.plexapp.com/2.0/?method=artist.getInfo&artist=spoon&autocorrect=1&lang=en&format=json&api_key=d5310352469c2631e5976d0f4a599773' from the HTTP cache
2017-05-31 06:41:30,459 (7fcff9e3b700) :  DEBUG (runtime:88) - Sending packed state data (590 bytes)
2017-05-31 06:41:30,462 (7fcff9e3b700) :  DEBUG (runtime:924) - Response: [200] str, 10248 bytes
2017-05-31 06:41:30,852 (7fcff9e3b700) :  DEBUG (runtime:717) - Handling request GET /:/plugins/com.plexapp.agents.lastfm/messaging/function/TWVzc2FnZUtpdDpBcnRpc3RUb3BUcmFja3M_/Y2VyZWFsMQoxCmxpc3QKMApyMAo_/Y2VyZWFsMQoxCmRpY3QKMgpzMgplbnM0CmxhbmdzNQpTcG9vbnM2CmFydGlzdHIwCg__
2017-05-31 06:41:30,859 (7fcff9e3b700) :  DEBUG (runtime:49) - Received packed state data (564 bytes)
2017-05-31 06:41:30,876 (7fcff9e3b700) :  DEBUG (runtime:814) - Found route matching /:/plugins/com.plexapp.agents.lastfm/messaging/function/TWVzc2FnZUtpdDpBcnRpc3RUb3BUcmFja3M_/Y2VyZWFsMQoxCmxpc3QKMApyMAo_/Y2VyZWFsMQoxCmRpY3QKMgpzMgplbnM0CmxhbmdzNQpTcG9vbnM2CmFydGlzdHIwCg__
2017-05-31 06:41:30,934 (7fcff9e3b700) :  DEBUG (networking:161) - Fetching 'http://lastfm-z.plexapp.com/2.0/?method=artist.getTopTracks&artist=spoon&lang=en&format=json&api_key=d5310352469c2631e5976d0f4a599773' from the HTTP cache
2017-05-31 06:41:31,311 (7fcff9e3b700) :  DEBUG (runtime:88) - Sending packed state data (590 bytes)
2017-05-31 06:41:31,315 (7fcff9e3b700) :  DEBUG (runtime:924) - Response: [200] str, 57518 bytes
2017-05-31 06:41:32,422 (7fcff9e3b700) :  DEBUG (runtime:717) - Handling request GET /:/plugins/com.plexapp.agents.lastfm/messaging/function/TWVzc2FnZUtpdDpBbGJ1bVNlYXJjaA__/Y2VyZWFsMQoxCmxpc3QKMApyMAo_/Y2VyZWFsMQoxCmRpY3QKNApzMgplbnM0Cmxhbmd1MTQKR2EgR2EgR2EgR2EgR2FzNQphbGJ1bXM0CjIwMDdzNAp5ZWFyczUKU3Bvb25zNgphcnRpc3RyMAo_
2017-05-31 06:41:32,432 (7fcff9e3b700) :  DEBUG (runtime:49) - Received packed state data (564 bytes)
2017-05-31 06:41:32,445 (7fcff9e3b700) :  DEBUG (runtime:814) - Found route matching /:/plugins/com.plexapp.agents.lastfm/messaging/function/TWVzc2FnZUtpdDpBbGJ1bVNlYXJjaA__/Y2VyZWFsMQoxCmxpc3QKMApyMAo_/Y2VyZWFsMQoxCmRpY3QKNApzMgplbnM0Cmxhbmd1MTQKR2EgR2EgR2EgR2EgR2FzNQphbGJ1bXM0CjIwMDdzNAp5ZWFyczUKU3Bvb25zNgphcnRpc3RyMAo_
2017-05-31 06:41:32,498 (7fcff9e3b700) :  DEBUG (networking:161) - Fetching 'http://lastfm-z.plexapp.com/2.0/?method=artist.gettopalbums&artist=spoon&page=1&limit=50&format=json&api_key=d5310352469c2631e5976d0f4a599773' from the HTTP cache
2017-05-31 06:41:32,607 (7fcff9e3b700) :  DEBUG (networking:161) - Fetching 'http://lastfm-z.plexapp.com/2.0/?method=artist.gettopalbums&artist=spoon&page=2&limit=50&format=json&api_key=d5310352469c2631e5976d0f4a599773' from the HTTP cache
2017-05-31 06:41:32,718 (7fcff9e3b700) :  DEBUG (networking:161) - Fetching 'http://lastfm-z.plexapp.com/2.0/?method=artist.gettopalbums&artist=spoon&page=3&limit=50&format=json&api_key=d5310352469c2631e5976d0f4a599773' from the HTTP cache
2017-05-31 06:41:32,815 (7fcff9e3b700) :  DEBUG (networking:161) - Fetching 'http://lastfm-z.plexapp.com/2.0/?method=artist.gettopalbums&artist=spoon&page=4&limit=50&format=json&api_key=d5310352469c2631e5976d0f4a599773' from the HTTP cache
2017-05-31 06:41:32,922 (7fcff9e3b700) :  DEBUG (networking:161) - Fetching 'http://lastfm-z.plexapp.com/2.0/?method=album.getInfo&artist=spoon&album=ga%20ga%20ga%20ga%20ga&autocorrect=1&lang=en&format=json&api_key=d5310352469c2631e5976d0f4a599773' from the HTTP cache
2017-05-31 06:41:33,008 (7fcff9e3b700) :  DEBUG (runtime:88) - Sending packed state data (590 bytes)
2017-05-31 06:41:33,011 (7fcff9e3b700) :  DEBUG (runtime:924) - Response: [200] str, 8232 bytes
2017-05-31 06:41:33,532 (7fcff9e3b700) :  DEBUG (runtime:717) - Handling request GET /:/plugins/com.plexapp.agents.
2017-05-31 06:41:33,541 (7fcff9e3b700) :  DEBUG (runtime:49) - Received packed state data (556 bytes)
2017-05-31 06:41:33,558 (7fcff9e3b700) :  DEBUG (runtime:814) - Found route matching /:/plugins/com.plexapp.agents.
2017-05-31 06:41:33,608 (7fcff9e3b700) :  DEBUG (networking:166) - Requesting 'https://musicbrainz.plex.tv/ws/2/artist/d3b0f18b-71a0-4077-8d42-21243f4172b4'
2017-05-31 06:41:33,695 (7fcff9e3b700) :  DEBUG (networking:198) - Not caching 'https://musicbrainz.plex.tv/ws/2/artist/d3b0f18b-71a0-4077-8d42-21243f4172b4' (content type 'application/octet-stream' not cacheable in Agent plug-ins)
2017-05-31 06:41:33,722 (7fcff9e3b700) :  DEBUG (networking:166) - Requesting 'https://musicbrainz.plex.tv/ws/2/artist/d3b0f18b-71a0-4077-8d42-21243f4172b4'
2017-05-31 06:41:33,851 (7fcff9e3b700) :  DEBUG (networking:198) - Not caching 'https://musicbrainz.plex.tv/ws/2/artist/d3b0f18b-71a0-4077-8d42-21243f4172b4' (content type 'application/octet-stream' not cacheable in Agent plug-ins)
2017-05-31 06:41:33,855 (7fcff9e3b700) :  INFO (__init__:77) - Found MBID: d3b0f18b-71a0-4077-8d42-21243f4172b4
2017-05-31 06:41:33,868 (7fcff9e3b700) :  DEBUG (runtime:88) - Sending packed state data (582 bytes)
2017-05-31 06:41:33,872 (7fcff9e3b700) :  DEBUG (runtime:924) - Response: [200] str, 68 bytes
2017-05-31 06:41:41,505 (7fcff9e3b700) :  DEBUG (runtime:717) - Handling request GET /:/plugins/com.plexapp.agents.lastfm/messaging/function/TWVzc2FnZUtpdDpBcnRpc3RTZWFyY2g_/Y2VyZWFsMQoxCmxpc3QKMApyMAo_/Y2VyZWFsMQoyCmRpY3QKbGlzdAozCnMyCmVuczQKbGFuZ3IxCnM2CmFsYnVtc3M1ClNwb29uczYKYXJ0aXN0MQpzMTIKVHJhbnNmZXJlbmNlcjAK
2017-05-31 06:41:41,514 (7fcff9e3b700) :  DEBUG (runtime:49) - Received packed state data (564 bytes)
2017-05-31 06:41:41,526 (7fcff9e3b700) :  DEBUG (runtime:814) - Found route matching /:/plugins/com.plexapp.agents.lastfm/messaging/function/TWVzc2FnZUtpdDpBcnRpc3RTZWFyY2g_/Y2VyZWFsMQoxCmxpc3QKMApyMAo_/Y2VyZWFsMQoyCmRpY3QKbGlzdAozCnMyCmVuczQKbGFuZ3IxCnM2CmFsYnVtc3M1ClNwb29uczYKYXJ0aXN0MQpzMTIKVHJhbnNmZXJlbmNlcjAK
2017-05-31 06:41:41,589 (7fcff9e3b700) :  DEBUG (networking:161) - Fetching 'http://lastfm-z.plexapp.com/2.0/?method=artist.search&artist=spoon&page=1&limit=9&format=json&api_key=d5310352469c2631e5976d0f4a599773' from the HTTP cache
2017-05-31 06:41:41,642 (7fcff9e3b700) :  INFO (__init__:201) - Fetching artist's albums and applying album bonus.
2017-05-31 06:41:41,707 (7fcff9e3b700) :  DEBUG (networking:161) - Fetching 'http://lastfm-z.plexapp.com/2.0/?method=artist.gettopalbums&artist=spoon&page=1&limit=50&format=json&api_key=d5310352469c2631e5976d0f4a599773' from the HTTP cache
2017-05-31 06:41:42,155 (7fcff9e3b700) :  INFO (__init__:225) - Applying album bonus of: 1
2017-05-31 06:41:42,160 (7fcff9e3b700) :  INFO (__init__:187) - Artist result: Spoon dist: -1 album bonus: 1 listeners: 1462264 score: 92
2017-05-31 06:41:42,166 (7fcff9e3b700) :  INFO (__init__:201) - Fetching artist's albums and applying album bonus.
2017-05-31 06:41:42,226 (7fcff9e3b700) :  DEBUG (networking:161) - Fetching 'http://lastfm-z.plexapp.com/2.0/?method=artist.gettopalbums&artist=the%20lovin%27%20spoonful&page=1&limit=50&format=json&api_key=d5310352469c2631e5976d0f4a599773' from the HTTP cache
2017-05-31 06:41:42,686 (7fcff9e3b700) :  INFO (__init__:187) - Artist result: The Lovin' Spoonful dist: 18 album bonus: 0 listeners: 558723 score: 72
2017-05-31 06:41:42,689 (7fcff9e3b700) :  INFO (__init__:193) - Skipping artist, didn't meet minimum score of 75
2017-05-31 06:41:42,694 (7fcff9e3b700) :  INFO (__init__:201) - Fetching artist's albums and applying album bonus.
2017-05-31 06:41:42,755 (7fcff9e3b700) :  DEBUG (networking:161) - Fetching 'http://lastfm-z.plexapp.com/2.0/?method=artist.gettopalbums&artist=spoonboy&page=1&limit=50&format=json&api_key=d5310352469c2631e5976d0f4a599773' from the HTTP cache
2017-05-31 06:41:43,216 (7fcff9e3b700) :  INFO (__init__:187) - Artist result: Spoonboy dist: 15 album bonus: 0 listeners: 30204 score: 75
2017-05-31 06:41:43,224 (7fcff9e3b700) :  INFO (__init__:201) - Fetching artist's albums and applying album bonus.
2017-05-31 06:41:43,285 (7fcff9e3b700) :  DEBUG (networking:161) - Fetching 'http://lastfm-z.plexapp.com/2.0/?method=artist.gettopalbums&artist=jam%20%26%20spoon&page=1&limit=50&format=json&api_key=d5310352469c2631e5976d0f4a599773' from the HTTP cache
2017-05-31 06:41:43,693 (7fcff9e3b700) :  INFO (__init__:187) - Artist result: Jam & Spoon dist: 29 album bonus: 0 listeners: 162227 score: 61
2017-05-31 06:41:43,697 (7fcff9e3b700) :  INFO (__init__:193) - Skipping artist, didn't meet minimum score of 75
2017-05-31 06:41:43,705 (7fcff9e3b700) :  INFO (__init__:201) - Fetching artist's albums and applying album bonus.
2017-05-31 06:41:43,763 (7fcff9e3b700) :  DEBUG (networking:161) - Fetching 'http://lastfm-z.plexapp.com/2.0/?method=artist.gettopalbums&artist=spoonbill&page=1&limit=50&format=json&api_key=d5310352469c2631e5976d0f4a599773' from the HTTP cache
2017-05-31 06:41:44,122 (7fcff9e3b700) :  INFO (__init__:187) - Artist result: Spoonbill dist: 17 album bonus: 0 listeners: 17591 score: 73
2017-05-31 06:41:44,126 (7fcff9e3b700) :  INFO (__init__:193) - Skipping artist, didn't meet minimum score of 75
2017-05-31 06:41:44,131 (7fcff9e3b700) :  INFO (__init__:187) - Artist result: Dave Spoon dist: 20 album bonus: 0 listeners: 90278 score: 70
2017-05-31 06:41:44,135 (7fcff9e3b700) :  INFO (__init__:193) - Skipping artist, didn't meet minimum score of 75
2017-05-31 06:41:44,139 (7fcff9e3b700) :  INFO (__init__:187) - Artist result: Rae Spoon dist: 17 album bonus: 0 listeners: 9154 score: 73
2017-05-31 06:41:44,143 (7fcff9e3b700) :  INFO (__init__:193) - Skipping artist, didn't meet minimum score of 75
2017-05-31 06:41:44,147 (7fcff9e3b700) :  INFO (__init__:187) - Artist result: T-Spoon dist: 5 album bonus: 0 listeners: 41767 score: 85
2017-05-31 06:41:44,152 (7fcff9e3b700) :  INFO (__init__:187) - Artist result: Spoons dist: 6 album bonus: 0 listeners: 6174 score: 84
2017-05-31 06:41:44,216 (7fcff9e3b700) :  DEBUG (networking:161) - Fetching 'http://lastfm-z.plexapp.com/2.0/?method=artist.getInfo&artist=spoon&autocorrect=1&lang=en&format=json&api_key=d5310352469c2631e5976d0f4a599773' from the HTTP cache
2017-05-31 06:41:44,300 (7fcff9e3b700) :  DEBUG (runtime:88) - Sending packed state data (590 bytes)
2017-05-31 06:41:44,303 (7fcff9e3b700) :  DEBUG (runtime:924) - Response: [200] str, 10248 bytes
2017-05-31 06:41:44,443 (7fcff9e3b700) :  DEBUG (runtime:717) - Handling request GET /:/plugins/com.plexapp.agents.lastfm/messaging/function/TWVzc2FnZUtpdDpBcnRpc3RUb3BUcmFja3M_/Y2VyZWFsMQoxCmxpc3QKMApyMAo_/Y2VyZWFsMQoxCmRpY3QKMgpzMgplbnM0CmxhbmdzNQpTcG9vbnM2CmFydGlzdHIwCg__
2017-05-31 06:41:44,452 (7fcff9e3b700) :  DEBUG (runtime:49) - Received packed state data (564 bytes)
2017-05-31 06:41:44,465 (7fcff9e3b700) :  DEBUG (runtime:814) - Found route matching /:/plugins/com.plexapp.agents.lastfm/messaging/function/TWVzc2FnZUtpdDpBcnRpc3RUb3BUcmFja3M_/Y2VyZWFsMQoxCmxpc3QKMApyMAo_/Y2VyZWFsMQoxCmRpY3QKMgpzMgplbnM0CmxhbmdzNQpTcG9vbnM2CmFydGlzdHIwCg__
2017-05-31 06:41:44,570 (7fcff9e3b700) :  DEBUG (networking:161) - Fetching 'http://lastfm-z.plexapp.com/2.0/?method=artist.getTopTracks&artist=spoon&lang=en&format=json&api_key=d5310352469c2631e5976d0f4a599773' from the HTTP cache
2017-05-31 06:41:44,895 (7fcff9e3b700) :  DEBUG (runtime:88) - Sending packed state data (590 bytes)
2017-05-31 06:41:44,899 (7fcff9e3b700) :  DEBUG (runtime:924) - Response: [200] str, 57518 bytes
2017-05-31 06:41:45,399 (7fcff9e3b700) :  DEBUG (runtime:717) - Handling request GET /:/plugins/com.plexapp.agents.lastfm/messaging/function/TWVzc2FnZUtpdDpBbGJ1bVNlYXJjaA__/Y2VyZWFsMQoxCmxpc3QKMApyMAo_/Y2VyZWFsMQoxCmRpY3QKNApzMgplbnM0Cmxhbmd1MTIKVHJhbnNmZXJlbmNlczUKYWxidW1zNAoyMDEwczQKeWVhcnM1ClNwb29uczYKYXJ0aXN0cjAK
2017-05-31 06:41:45,407 (7fcff9e3b700) :  DEBUG (runtime:49) - Received packed state data (564 bytes)
2017-05-31 06:41:45,419 (7fcff9e3b700) :  DEBUG (runtime:814) - Found route matching /:/plugins/com.plexapp.agents.lastfm/messaging/function/TWVzc2FnZUtpdDpBbGJ1bVNlYXJjaA__/Y2VyZWFsMQoxCmxpc3QKMApyMAo_/Y2VyZWFsMQoxCmRpY3QKNApzMgplbnM0Cmxhbmd1MTIKVHJhbnNmZXJlbmNlczUKYWxidW1zNAoyMDEwczQKeWVhcnM1ClNwb29uczYKYXJ0aXN0cjAK
2017-05-31 06:41:45,476 (7fcff9e3b700) :  DEBUG (networking:161) - Fetching 'http://lastfm-z.plexapp.com/2.0/?method=artist.gettopalbums&artist=spoon&page=1&limit=50&format=json&api_key=d5310352469c2631e5976d0f4a599773' from the HTTP cache
2017-05-31 06:41:45,553 (7fcff9e3b700) :  DEBUG (networking:161) - Fetching 'http://lastfm-z.plexapp.com/2.0/?method=artist.gettopalbums&artist=spoon&page=2&limit=50&format=json&api_key=d5310352469c2631e5976d0f4a599773' from the HTTP cache
2017-05-31 06:41:45,629 (7fcff9e3b700) :  DEBUG (networking:161) - Fetching 'http://lastfm-z.plexapp.com/2.0/?method=artist.gettopalbums&artist=spoon&page=3&limit=50&format=json&api_key=d5310352469c2631e5976d0f4a599773' from the HTTP cache
2017-05-31 06:41:45,715 (7fcff9e3b700) :  DEBUG (networking:161) - Fetching 'http://lastfm-z.plexapp.com/2.0/?method=artist.gettopalbums&artist=spoon&page=4&limit=50&format=json&api_key=d5310352469c2631e5976d0f4a599773' from the HTTP cache
2017-05-31 06:41:45,834 (7fcff9e3b700) :  DEBUG (networking:166) - Requesting 'http://lastfm-z.plexapp.com/2.0/?method=album.getInfo&artist=spoon&album=transference&autocorrect=1&lang=en&format=json&api_key=d5310352469c2631e5976d0f4a599773'
2017-05-31 06:41:46,151 (7fcff9e3b700) :  DEBUG (runtime:88) - Sending packed state data (590 bytes)
2017-05-31 06:41:46,153 (7fcff9e3b700) :  DEBUG (runtime:924) - Response: [200] str, 7994 bytes
2017-05-31 06:41:46,265 (7fcff9e3b700) :  DEBUG (runtime:717) - Handling request GET /:/plugins/com.plexapp.agents.
2017-05-31 06:41:46,276 (7fcff9e3b700) :  DEBUG (runtime:49) - Received packed state data (556 bytes)
2017-05-31 06:41:46,301 (7fcff9e3b700) :  DEBUG (runtime:814) - Found route matching /:/plugins/com.plexapp.agents.
2017-05-31 06:41:46,352 (7fcff9e3b700) :  DEBUG (networking:166) - Requesting 'https://musicbrainz.plex.tv/ws/2/artist/d3b0f18b-71a0-4077-8d42-21243f4172b4'
2017-05-31 06:41:46,452 (7fcff9e3b700) :  DEBUG (networking:198) - Not caching 'https://musicbrainz.plex.tv/ws/2/artist/d3b0f18b-71a0-4077-8d42-21243f4172b4' (content type 'application/octet-stream' not cacheable in Agent plug-ins)
2017-05-31 06:41:46,476 (7fcff9e3b700) :  DEBUG (networking:166) - Requesting 'https://musicbrainz.plex.tv/ws/2/artist/d3b0f18b-71a0-4077-8d42-21243f4172b4'
2017-05-31 06:41:46,565 (7fcff9e3b700) :  DEBUG (networking:198) - Not caching 'https://musicbrainz.plex.tv/ws/2/artist/d3b0f18b-71a0-4077-8d42-21243f4172b4' (content type 'application/octet-stream' not cacheable in Agent plug-ins)
2017-05-31 06:41:46,568 (7fcff9e3b700) :  INFO (__init__:77) - Found MBID: d3b0f18b-71a0-4077-8d42-21243f4172b4
2017-05-31 06:41:46,579 (7fcff9e3b700) :  DEBUG (runtime:88) - Sending packed state data (582 bytes)
2017-05-31 06:41:46,582 (7fcff9e3b700) :  DEBUG (runtime:924) - Response: [200] str, 68 bytes
